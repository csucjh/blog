import{c as n}from"./app.abe63d9c.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_560-\u548C\u4E3A-k-\u7684\u5B50\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_560-\u548C\u4E3A-k-\u7684\u5B50\u6570\u7EC4" aria-hidden="true">#</a> [560] \u548C\u4E3A K \u7684\u5B50\u6570\u7EC4</h2><h3 id="\u524D\u7F00\u548C-\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#\u524D\u7F00\u548C-\u8FED\u4EE3" aria-hidden="true">#</a> \u524D\u7F00\u548C+\u8FED\u4EE3</h3><p>\u65F6\u95F4\u590D\u6742\u5EA6O(n<sup>2</sup>)\uFF1B\u7A7A\u95F4\u590D\u6742\u5EA6O(n)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">subarraySum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> preNums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> preNums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            preNums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> preNums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//System.out.println(Arrays.toString(preNums));</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u8BA1\u7B97\u5F53\u524Di\u7684\u524D\u7F00\u548C\u4E0Ek\u7684\u5DEE\u503C</span>
            <span class="token keyword">int</span> sub <span class="token operator">=</span> preNums<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> k<span class="token punctuation">;</span>
            <span class="token comment">// \u5C06\u5DEE\u503C\u57280...i\u7684\u524D\u7F00\u548C\u91CC\u9762\u627E\uFF0C\u51FA\u73B0\u4E00\u6B21\u7D2F\u8BA1\u4E00\u6B21</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;=</span> i<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>preNums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> sub<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    count<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="\u524D\u7F00\u548C" tabindex="-1"><a class="header-anchor" href="#\u524D\u7F00\u548C" aria-hidden="true">#</a> \u524D\u7F00\u548C</h3><p>\u4ECE\u7B2C\u4E00\u79CD\u89E3\u6CD5\u770B\u51FA\uFF0C\u7B2C\u4E8C\u5C42for\u5FAA\u73AF\u5B9E\u9645\u5C31\u662F\u5728\u67E5\u627E\u67D0\u4E2A\u524D\u7F00\u548C<code>(preNums[i+1] - k)</code>\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u56E0\u4E3A\u672C\u9898\u5E76\u662F\u8FD4\u56DE\u6B21\u6570\u5E76\u4E0D\u662F\u901A\u8FC7\u524D\u7F00\u548C\u6765\u6C42\u533A\u57DF\u548C\uFF0C\u6240\u4EE5\u5E76\u4E0D\u9700\u8981\u4FDD\u7559\u524D\u7F00\u548C\u6570\u7EC4<code>preSums</code>\uFF0C\u53EA\u9700\u8981\u4FDD\u7559<code>preMap</code>\u7528\u6765\u5B58\u50A8\u524D\u7F00\u548C\u51FA\u73B0\u7684\u6B21\u6570</p><p>\u65F6\u95F4\u590D\u6742\u5EA6O(n)\uFF1B\u7A7A\u95F4\u590D\u6742\u5EA6O(n)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">subarraySum</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> preMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> preSum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            preSum <span class="token operator">+=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token comment">// \u6C42\u5DEE\u503C</span>
            <span class="token keyword">int</span> sub <span class="token operator">=</span> preSum <span class="token operator">-</span> k<span class="token punctuation">;</span>

            <span class="token comment">// \u8FD9\u91CC\u4E00\u5B9A\u662F\u5728\u5F53\u524D\u524D\u7F00\u548C\u653E\u5230map\u4E4B\u524D\u8BA1\u6570</span>
            count <span class="token operator">+=</span> preMap<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>sub<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            preMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>preSum<span class="token punctuation">,</span> preMap<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>preSum<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,8);function t(e,o){return p}var l=s(a,[["render",t]]);export{l as default};
