import{c as n}from"./app.3830c48e.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_442-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_442-\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u636E" aria-hidden="true">#</a> 442.\u6570\u7EC4\u4E2D\u91CD\u590D\u7684\u6570\u636E</h2><p><img src="https://user-images.githubusercontent.com/12841424/146033103-5533d2a2-0e5c-438e-b490-7cd286acdca8.png" alt="image"></p><p>\u7ECF\u8FC7\u76F8\u53CD\u6570\u5904\u7406\u540E\uFF0C\u7B2C\u4E8C\u6B21\u51FA\u73B0\u7684\u6570\u5C31\u662F\u8D1F\u6570\u4E86\uFF0C\u6B64\u65F6\u5BF9\u5E94\u7684index\u5C31\u662F\u91CD\u590D\u7684\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> <span class="token function">findDuplicates</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> dupList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u56E0\u4E3A\u4F7F\u7528\u76F8\u53CD\u6570\u539F\u5730\u66F4\u65B0\uFF0C\u6240\u4EE5\u53EF\u80FD\u662F\u8D1F\u503C</span>
            <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u662F\u6B63\u6570\u8BF4\u660E\u7B2C\u4E00\u6B21\u51FA\u73B0\uFF0C\u6539\u4E3A\u8D1F\u6570</span>
                nums<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>nums<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                dupList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>idx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> dupList<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,4);function t(e,c){return p}var u=s(a,[["render",t]]);export{u as default};
