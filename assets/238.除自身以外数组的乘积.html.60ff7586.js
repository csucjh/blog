import{c as n}from"./app.ceb38300.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_238-\u9664\u81EA\u8EAB\u4EE5\u5916\u6570\u7EC4\u7684\u4E58\u79EF" tabindex="-1"><a class="header-anchor" href="#_238-\u9664\u81EA\u8EAB\u4EE5\u5916\u6570\u7EC4\u7684\u4E58\u79EF" aria-hidden="true">#</a> 238.\u9664\u81EA\u8EAB\u4EE5\u5916\u6570\u7EC4\u7684\u4E58\u79EF</h2><h3 id="\u5DE6\u53F3\u7D2F\u4E58" tabindex="-1"><a class="header-anchor" href="#\u5DE6\u53F3\u7D2F\u4E58" aria-hidden="true">#</a> \u5DE6\u53F3\u7D2F\u4E58</h3><p>\u601D\u8DEF\uFF1A</p><p>1\u3001\u4FDD\u6301\u7A7A\u95F4\u590D\u6742\u5EA6O(1)\u5C31\u662F\u8981\u597D\u597D\u5229\u7528\u5165\u53C2<code>nums</code>\u548C\u4E00\u4E2A\u8FD4\u56DE\u503C\u6570\u7EC4<code>output</code></p><p>2\u3001\u6211\u4EEC\u9009\u62E9<code>nums</code>\u4F5C\u4E3A\u53F3\u6570\u7EC4\uFF0C<code>output</code>\u4F5C\u4E3A\u5DE6\u6570\u7EC4\uFF1B\u8FD9\u4E2A\u53CD\u8FC7\u6765\u4E5F\u53EF\u4EE5</p><p>3\u3001\u5DE6\u6570\u7EC4\u9700\u8981\u6B63\u5E8F\u904D\u5386\u5143\u7D20\u7EC4<code>nums</code>\uFF0C\u5E76\u4E14\u6EE1\u8DB3<code>output[i] = output[i-1] * nums[i-1]</code></p><p>4\u3001\u53F3\u6570\u7EC4\u9700\u8981\u9006\u5E8F\u904D\u5386\u5143\u7D20\u7EC4<code>nums</code>\uFF0C\u5E76\u4E14\u6EE1\u8DB3<code>nums[i] = \u6539\u524D(nums[i+1]) * \u6539\u540E(nums[i+1])</code>\uFF0C\u9488\u5BF9\u6539\u524D\u7684<code>nums[i+1]</code>\u9700\u8981\u4E34\u65F6\u53D8\u91CFtemp\u6765\u4FDD\u5B58</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">productExceptSelf</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u539F\u6570\u7EC4\u4F5C\u4E3A\u53F3\u6570\u7EC4, \u8FD4\u56DE\u503C\u6570\u7EC4\u4F5C\u4E3A\u5DE6\u6570\u7EC4</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5148\u5904\u7406\u5DE6\u4FA7\u5143\u7D20</span>
        <span class="token comment">// \u7B2C\u4E00\u4E2A\u5143\u7D20\u6CA1\u6709\u5DE6\u4FA7\u5143\u7D20\uFF0C\u56E0\u6B64\u8D4B\u503C\u4E3A1</span>
        output<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u5DE6\u4FA7\u6709\u5143\u7D20\u5219\u653E\u5230output</span>
            output<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> output<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//System.out.println(Arrays.toString(output));</span>
        
        <span class="token comment">// \u518D\u5904\u7406\u53F3\u4FA7\u5143\u7D20</span>
        <span class="token comment">// \u7528\u4E00\u4E2A\u4E34\u65F6\u53D8\u91CF\u4FDD\u5B58\u88AB\u8986\u76D6\u7684nums[i]</span>
        <span class="token keyword">int</span> temp <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token comment">// \u9006\u5411\u7B2C\u4E00\u4E2A\u5143\u7D20\u6CA1\u6709\u53F3\u4FA7\u5143\u7D20\uFF0C\u56E0\u6B64\u8D4B\u503C\u4E3A1</span>
        nums<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u53F3\u4FA7\u6709\u5143\u7D20\u5219\u653E\u5230nums</span>
            <span class="token keyword">int</span> val <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> temp<span class="token punctuation">;</span>
            temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//System.out.println(Arrays.toString(nums));</span>

        <span class="token comment">// \u5DE6\u53F3\u5408\u5E76</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            output<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">*=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> output<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div>`,8);function t(e,o){return p}var l=s(a,[["render",t]]);export{l as default};
