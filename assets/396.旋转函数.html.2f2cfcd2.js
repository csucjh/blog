import{c as n}from"./app.51379cbf.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_396-\u65CB\u8F6C\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_396-\u65CB\u8F6C\u51FD\u6570" aria-hidden="true">#</a> 396.\u65CB\u8F6C\u51FD\u6570</h2><h3 id="\u8F6E\u8F6C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u8F6E\u8F6C\u6570\u7EC4" aria-hidden="true">#</a> \u8F6E\u8F6C\u6570\u7EC4</h3><p>\u6574\u4F53\u601D\u8DEF\u4E3A\u66B4\u529B\u8BA1\u7B97\uFF0C1\u3001\u5148\u8BA1\u7B97\u6BCF\u4E2Ak\u503C\u5BF9\u5E94\u7684\u8F6E\u8F6C\u6570\u7EC4B(k)\uFF0C2\u3001\u8BA1\u7B97F(k)\u7136\u540E\u5FAA\u73AF\u5BF9\u6BD4\u5F97\u51FA\u6700\u5927\u503C</p><p>\u7ED3\u679C\uFF1A\u6574\u4F53\u601D\u8DEF\u53EF\u4EE5\u5B9E\u73B0\uFF0C\u4F46\u662F\u4F1A\u8D85\u65F6\u4E5F\u5C31\u662F\u66B4\u529B\u4E0D\u662F\u9898\u76EE\u6C42\u89E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxRotateFunction</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

        <span class="token comment">// \u5B9A\u4E49\u6700\u5927F(n)</span>
        <span class="token keyword">int</span> max <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rotates <span class="token operator">=</span> <span class="token function">rotate</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u8BA1\u7B97F(k)</span>
            <span class="token keyword">int</span> f_k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                f_k <span class="token operator">+=</span> i <span class="token operator">*</span> rotates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            max <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span> f_k<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> max<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u65CB\u8F6C\u51FD\u6570\uFF0Cnums\u4E3A\u539F\u59CB\u6570\u7EC4\u4E0D\u80FD\u88AB\u4FEE\u6539\uFF0Ck\u4E3A\u65CB\u8F6C\u504F\u79FB\u91CF</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> nums<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rotates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>


        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            rotates<span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token operator">+</span>k<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> rotates<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="\u6570\u5B66\u89C4\u5F8B" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B66\u89C4\u5F8B" aria-hidden="true">#</a> \u6570\u5B66\u89C4\u5F8B</h3><p><strong>\u601D\u8DEF</strong></p><p>1\u3001\u76F4\u63A5\u627E\u51FAB(k)\u4E2D\u7B2C\u4E00\u4E2A\u5143\u7D20\u5728\u539FA(n)\u4E2D\u7684\u4F4D\u7F6E\uFF0C\u968F\u7740k\u7684\u53D8\u5316\uFF0C\u7B2C\u4E00\u4E2A\u5143\u7D20\u5728A(n)\u4E2D\u7684\u987A\u5E8F\u4E5F\u5728\u53D8\u5316</p><p>2\u3001\u7B2Ck\u6B21\u76F8\u5BF9\u4E8E\u7B2Ck-1\u6B21\u8F6E\u8F6C\uFF0C\u5B9E\u9645\u4E0A\u662F\u5C11\u4E86B(k-1)\u4E2D\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u7136\u540E\u5176\u4ED6\u5143\u7D20\u90FD\u589E\u52A0\u4E86\u4E00\u4E2A</p><p>3\u3001B(k-1)\u4E2D\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u5B9E\u9645\u4E0A\u5C31\u662FB(k)\u4E2D\u90A3\u4E2A\u4E3A\u96F6\u7684\u5143\u7D20(\u7B2C\u4E00\u4E2A\u5143\u7D20)</p><p>4\u3001\u7B2Ck\u6B21\u76F8\u5BF9\u4E8E\u7B2Ck-1\u6B21\u5B9E\u9645\u4E0A\u662F\u589E\u52A0\u4E86B(k)\u4E2D\u9664\u5F00first\u5143\u7D20\u7684\u6240\u6709\u5143\u7D20\u4E00\u6B21\uFF0C\u51CF\u5C11\u4E86first\u5143\u7D20n-1\u6B21</p><p>5\u3001F(k) = F(k-1) + sum(A(n)) - n * nums[first];</p><p>\u6839\u636E\u4EE5\u4E0A\u7279\u6027\uFF0C\u6211\u4EEC\u76F4\u63A5\u627E\u51FAB(k)\u7684first\u5143\u7D20\u5728A(n)\u4E2D\u7684\u4F4D\u7F6E(n-k) % n\uFF1B\u7136\u540E\u6839\u636EA(n)\u7684\u548Csum\u6765\u8BA1\u7B97F(k)\u76F8\u5BF9\u4E8EF(k-1)\u7684\u589E\u91CF\uFF0C\u6700\u540E\u5BF9\u6BD4\u5F97\u5230\u6700\u5927F(k)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">maxRotateFunction</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>

        <span class="token comment">// \u5148\u6C42\u5168\u5C40\u548C\uFF08\u7D2F\u52A0\u548C\uFF09</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            sum <span class="token operator">+=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u521D\u59CB\u5316F(0)\u503C</span>
        <span class="token keyword">int</span> fk <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u5F53k=0\u65F6\uFF0CB(0)\u548CA(n)\u76F8\u540C</span>
            fk <span class="token operator">+=</span> i <span class="token operator">*</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5B9A\u4E49\u6700\u5927fk\uFF0C\u521D\u59CB\u503C\u4E3Af0</span>
        <span class="token keyword">int</span> max_fk <span class="token operator">=</span> fk<span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u76F4\u63A5\u627E\u51FAB(k)\u4E2D\u7B2C\u4E00\u4E2A\u5143\u7D20\u5728\u539FA(n)\u4E2D\u7684\u4F4D\u7F6E</span>
            <span class="token keyword">int</span> first <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token operator">-</span>k<span class="token punctuation">)</span> <span class="token operator">%</span> n<span class="token punctuation">;</span>

            <span class="token comment">// \u7B2Ck\u6B21\u76F8\u5BF9\u4E8E\u7B2Ck-1\u6B21\u8F6E\u8F6C\uFF0C\u5B9E\u9645\u4E0A\u662F\u5C11\u4E86B(k-1)\u4E2D\u6700\u540E\u4E00\u4E2A\u5143\u7D20\uFF0C\u7136\u540E\u5176\u4ED6\u5143\u7D20\u90FD\u589E\u52A0\u4E86\u4E00\u4E2A</span>
            <span class="token comment">// B(k-1)\u4E2D\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u5B9E\u9645\u4E0A\u5C31\u662FB(k)\u4E2D\u90A3\u4E2A\u4E3A\u96F6\u7684\u5143\u7D20(\u7B2C\u4E00\u4E2A\u5143\u7D20)</span>
            <span class="token comment">// \u7B2Ck\u6B21\u76F8\u5BF9\u4E8E\u7B2Ck-1\u6B21\u5B9E\u9645\u4E0A\u662F\u589E\u52A0\u4E86\u9664\u5F00first\u5143\u7D20\u7684\u6240\u6709\u5143\u7D20\u4E00\u6B21\uFF0C\u51CF\u5C11\u4E86first\u5143\u7D20n-1\u6B21</span>
            <span class="token keyword">int</span> inc <span class="token operator">=</span> sum <span class="token operator">-</span> nums<span class="token punctuation">[</span>first<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> dec <span class="token operator">=</span> nums<span class="token punctuation">[</span>first<span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5982\u679C\u603B\u7684\u589E\u91CF\u662F\u6B63\u6570\u5C31\u662F\u5F53\u524D\u6700\u5927F(k)</span>
            fk <span class="token operator">+=</span> inc <span class="token operator">-</span> dec<span class="token punctuation">;</span> 
            
            max_fk <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max_fk<span class="token punctuation">,</span> fk<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">//System.out.println(&quot;first:&quot;+first+&quot;-inc:&quot;+inc+&quot;-dec:&quot;+dec+&quot;-fk:&quot;+fk+&quot;-max_fk:&quot;+max_fk);</span>

            <span class="token comment">// \u539F\u6570\u7EC4A(n)\u4E2D(index, n]\u52A0\u4E0A[0, index)\u5C31\u662FB(k)\u7684\u5143\u7D20\u987A\u5E8F</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> max_fk<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div>`,14);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
