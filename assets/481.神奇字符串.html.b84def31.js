import{c as n}from"./app.6de1e928.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_481-\u795E\u5947\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_481-\u795E\u5947\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 481.\u795E\u5947\u5B57\u7B26\u4E32</h2><h3 id="\u6784\u9020\u6CD5-\u4E00-\u2014\u2014stringbuilder" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u6CD5-\u4E00-\u2014\u2014stringbuilder" aria-hidden="true">#</a> \u6784\u9020\u6CD5(\u4E00)\u2014\u2014StringBuilder</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">magicalString</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;122&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5F00\u59CB\u6309\u89C4\u5219\u5C55\u5F00\u5B57\u7B26\u4E32\uFF0C\u56E0\u4E3A2\u548C1\u662F\u8FDE\u7EED\u51FA\u73B0\u6B21\u6570\uFF0C\u6240\u4EE5\u6BCF\u6B21\u5C55\u5F00\u5C31\u8981\u57282\u548C1\u4E4B\u95F4\u5207\u6362</span>
        <span class="token comment">// \u8BB0\u5F55\u5207\u6362\u6570\u5B57\uFF0C\u5F53\u5207\u6362\u6570\u5B57\u4E3A1\u65F6\u8BB0\u5F55\u6570\u91CFcount</span>
        <span class="token comment">// \u56E0\u4E3A\u521D\u59CB\u503C&quot;122&quot;\u542B\u4E49\uFF1A\u7B2C\u4E00\u4F4D\u8868\u793A\u5C55\u5F001\u4E2A1\uFF0C\u7B2C\u4E8C\u4F4D\u8868\u793A\u5C55\u5F002\u4E2A2\uFF0C\u7B2C\u4E09\u4F4D\u8868\u793A\u5C55\u5F002\u4E2A1</span>
        <span class="token comment">// \u56E0\u6B64idx\u4ECE\u7B2C\u4E09\u4F4D\u5F00\u59CB\u4E5F\u5C31\u662F\u521D\u59CB\u503C\u4E3A2\uFF0Cswitch_ch\u4ECE\u5B57\u7B261\u5F00\u59CB</span>
        <span class="token keyword">char</span> switch_ch <span class="token operator">=</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5B9A\u4E491\u7684\u4E2A\u6570\uFF0C\u57FA\u4E8E\u521D\u59CB\u503C&quot;122&quot;\uFF0Ccount\u521D\u59CB\u503C\u4E3A1</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   
        <span class="token keyword">while</span><span class="token punctuation">(</span>len <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u5F53\u524Didx\u7684\u6570\u5B57\u51B3\u5B9A\u8FFD\u52A0\u7684\u6570\u91CF</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>idx<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5F85\u8FFD\u52A0\u5B57\u7B26\u7684\u6570\u91CF</span>
            <span class="token keyword">int</span> ch_num <span class="token operator">=</span> ch<span class="token operator">-</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
            <span class="token comment">//System.out.print(&quot;\u8FFD\u52A0\u524D:&quot;+sb.toString());</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ch_num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>switch_ch<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//System.out.println(&quot;-\u8FFD\u52A0idx:&quot;+idx+&quot;-\u8FFD\u52A0\u6570\u91CF:&quot;+ch+&quot;-\u8FFD\u52A0\u5B57\u7B26:&quot;+switch_ch+&quot;-\u8FFD\u52A0\u540E:&quot;+sb.toString());</span>

            len <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5F53\u5207\u6362\u5B57\u7B26\u4E3A1\u65F6\u8BB0\u5F55\u6570\u91CF</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>switch_ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// \u56E0\u4E3A\u8FFD\u52A0\u540E\u957F\u5EA6\u53EF\u80FD\u8D85\u8FC7n\u6240\u4EE5\u8981\u5904\u7406</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">&lt;=</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">// \u6CA1\u8D85\uFF0C\u76F4\u63A5\u52A0\u4E0A\u672C\u6B21\u8FFD\u52A0\u7684\u6570\u91CF</span>
                    count <span class="token operator">+=</span> ch_num<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token comment">// \u8D85\u51FA\uFF0C\u53EA\u589E\u52A0\u589E\u91CF\u90E8\u5206</span>
                    count <span class="token operator">+=</span> n <span class="token operator">-</span> <span class="token punctuation">(</span>len <span class="token operator">-</span> ch_num<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// \u5207\u6362\u5B57\u7B262--&gt;1 \u6216 1--&gt;2(\u6BCF\u6B21\u5207\u6362\u540E\u90FD\u8981\u5BF9\u6362)</span>
            switch_ch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token char">&#39;3&#39;</span> <span class="token operator">-</span> switch_ch <span class="token operator">+</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// idx\u8FC1\u79FB</span>
            idx<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br></div></div><h3 id="\u6784\u9020\u6CD5-\u4E8C-\u2014\u2014char\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u6CD5-\u4E8C-\u2014\u2014char\u6570\u7EC4" aria-hidden="true">#</a> \u6784\u9020\u6CD5(\u4E8C)\u2014\u2014char\u6570\u7EC4</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">magicalString</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        chs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">;</span>
        chs<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">;</span>
        chs<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token char">&#39;2&#39;</span><span class="token punctuation">;</span> 

        <span class="token comment">// \u5F00\u59CB\u6309\u89C4\u5219\u5C55\u5F00\u5B57\u7B26\u4E32\uFF0C\u56E0\u4E3A2\u548C1\u662F\u8FDE\u7EED\u51FA\u73B0\u6B21\u6570\uFF0C\u6240\u4EE5\u6BCF\u6B21\u5C55\u5F00\u5C31\u8981\u57282\u548C1\u4E4B\u95F4\u5207\u6362</span>
        <span class="token comment">// \u8BB0\u5F55\u5207\u6362\u6570\u5B57\uFF0C\u5F53\u5207\u6362\u6570\u5B57\u4E3A1\u65F6\u8BB0\u5F55\u6570\u91CFcount</span>
        <span class="token comment">// \u56E0\u4E3A\u521D\u59CB\u503C&quot;122&quot;\u542B\u4E49\uFF1A\u7B2C\u4E00\u4F4D\u8868\u793A\u5C55\u5F001\u4E2A1\uFF0C\u7B2C\u4E8C\u4F4D\u8868\u793A\u5C55\u5F002\u4E2A2\uFF0C\u7B2C\u4E09\u4F4D\u8868\u793A\u5C55\u5F002\u4E2A1</span>
        <span class="token comment">// \u56E0\u6B64idx\u4ECE\u7B2C\u4E09\u4F4D\u5F00\u59CB\u4E5F\u5C31\u662F\u521D\u59CB\u503C\u4E3A2\uFF0Cswitch_ch\u4ECE\u5B57\u7B261\u5F00\u59CB</span>
        <span class="token keyword">char</span> switch_ch <span class="token operator">=</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5B9A\u4E491\u7684\u4E2A\u6570\uFF0C\u57FA\u4E8E\u521D\u59CB\u503C&quot;122&quot;\uFF0Ccount\u521D\u59CB\u503C\u4E3A1</span>
        <span class="token comment">// len\u4E3A\u6570\u7EC4\u4E2D\u6570\u636E\u7684\u957F\u5EA6</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> len <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        
        <span class="token keyword">while</span><span class="token punctuation">(</span>len <span class="token operator">&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u5F53\u524Didx\u7684\u6570\u5B57\u51B3\u5B9A\u8FFD\u52A0\u7684\u6570\u91CF</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> chs<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token comment">// \u5F85\u8FFD\u52A0\u5B57\u7B26\u7684\u6570\u91CF</span>
            <span class="token keyword">int</span> ch_num <span class="token operator">=</span> ch<span class="token operator">-</span><span class="token char">&#39;0&#39;</span><span class="token punctuation">;</span>
            <span class="token comment">//System.out.print(&quot;\u8FFD\u52A0\u524D:&quot;+Arrays.toString(chs));</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> ch_num<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// \u56E0\u4E3A\u8FFD\u52A0\u540E\u957F\u5EA6\u53EF\u80FD\u8D85\u8FC7n\u6240\u4EE5\u8981\u5904\u7406      </span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    chs<span class="token punctuation">[</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> switch_ch<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                len<span class="token operator">++</span><span class="token punctuation">;</span>   
            <span class="token punctuation">}</span>
            <span class="token comment">//System.out.println(&quot;-\u8FFD\u52A0idx:&quot;+idx+&quot;-\u8FFD\u52A0\u6570\u91CF:&quot;+ch+&quot;-\u8FFD\u52A0\u5B57\u7B26:&quot;+switch_ch+&quot;-\u8FFD\u52A0\u540E:&quot;+Arrays.toString(chs));</span>

            <span class="token comment">// \u5F53\u5207\u6362\u5B57\u7B26\u4E3A1\u65F6\u8BB0\u5F55\u6570\u91CF</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>switch_ch <span class="token operator">==</span> <span class="token char">&#39;1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         
                <span class="token keyword">if</span><span class="token punctuation">(</span>len <span class="token operator">&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">// \u6CA1\u8D85\uFF0C\u76F4\u63A5\u52A0\u4E0A\u672C\u6B21\u8FFD\u52A0\u7684\u6570\u91CF</span>
                    count <span class="token operator">+=</span> ch_num<span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    <span class="token comment">// \u8D85\u51FA\uFF0C\u53EA\u589E\u52A0\u589E\u91CF\u90E8\u5206</span>
                    count <span class="token operator">+=</span> n <span class="token operator">-</span> <span class="token punctuation">(</span>len <span class="token operator">-</span> ch_num<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// \u5207\u6362\u5B57\u7B262--&gt;1 \u6216 1--&gt;2(\u6BCF\u6B21\u5207\u6362\u540E\u90FD\u8981\u5BF9\u6362)</span>
            switch_ch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token char">&#39;3&#39;</span> <span class="token operator">-</span> switch_ch <span class="token operator">+</span> <span class="token char">&#39;0&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// idx\u8FC1\u79FB</span>
            idx<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div>`,5);function t(e,c){return p}var r=s(a,[["render",t]]);export{r as default};
