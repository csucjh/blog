import{c as n}from"./app.8bfe1516.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_242-\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD" tabindex="-1"><a class="header-anchor" href="#_242-\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD" aria-hidden="true">#</a> 242.\u6709\u6548\u7684\u5B57\u6BCD\u5F02\u4F4D\u8BCD</h2><h3 id="\u6392\u5E8F" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F" aria-hidden="true">#</a> \u6392\u5E8F</h3><p>\u6309\u7167\u9898\u610F\u4E24\u4E2A\u5B57\u7B26\u4E32\u5FC5\u987B\u662F\u5B8C\u5168\u4E00\u6837\u7684\u5B57\u7B26\u7EC4\u6210\uFF0C\u53EA\u662F\u987A\u5E8F\u4E0D\u540C\uFF0C\u56E0\u6B64</p><p>1\u3001\u957F\u5EA6\u4E00\u5B9A\u76F8\u540C</p><p>2\u3001\u5B57\u7B26\u4E00\u5B9A\u5B8C\u5168\u76F8\u540C</p><p>3\u3001\u53EA\u662F\u987A\u5E8F\u4E0D\u540C</p><p>\u9488\u5BF9\u8FD9\u4E00\u70B9\uFF0C\u6211\u4EEC\u6392\u5E8F\u540E\uFF0C\u6BD4\u8F83\u5B57\u7B26\u4E32\u76F8\u7B49</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAnagram</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">String</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s_arr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t_arr <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6392\u5E8F</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>s_arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>t_arr<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u8FD4\u56DE\u5B57\u7B26\u4E32\u6BD4\u8F83\u7ED3\u679C</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>s_arr<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>t_arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4" aria-hidden="true">#</a> \u6570\u7EC4</h3><p>1\u3001\u5148\u904D\u5386s\uFF0C\u7528\u6570\u7EC4\u6765\u8BB0\u5F55\u6BCF\u4E2A\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\uFF0C\u7136\u540E\u904D\u5386t\u6765\u9012\u51CF\u6B21\u6570\uFF0C\u6700\u540E\u6570\u7EC4\u4E2D\u5168\u662F0\u5C31\u662F\u7B26\u5408\u7684</p><p>2\u3001\u901A\u8FC7\u4F7F\u7528\u3010\u5C0F\u5199\u5B57\u7B26 - &#39;a&#39;\u3011\u8F6C\u5316\u6210\u6570\u7EC4\u7D22\u5F15\uFF0C\u5C31\u4E0D\u7528\u4F7F\u7528map\u4E86(\u53EF\u4EE5\u53C2\u8003383\u3001389)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isAnagram</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">String</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u53EA\u670926\u4E2A\u5B57\u7B26</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token comment">// \u904D\u5386s\u8BA1\u7B97\u5B57\u7B26\u4E32\u6B21\u6570</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u5C0F\u5199\u5B57\u6BCD-&#39;a&#39;\u53D8\u6210[0, 25]\u7684\u6570\u5B57</span>
            <span class="token keyword">int</span> idx <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//System.out.println(map);</span>

        <span class="token comment">// \u904D\u5386t\u9012\u51CF\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> t<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u5C0F\u5199\u5B57\u6BCD-&#39;a&#39;\u53D8\u6210[0, 25]\u7684\u6570\u5B57</span>
            <span class="token keyword">int</span> idx <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
            arr<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// System.out.println(map);</span>

        <span class="token comment">// \u6309\u9898\u610F\u5FC5\u987B\u6BCF\u4E2A\u4F4D\u90FD\u662F0</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,12);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
