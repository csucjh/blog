import{c as n}from"./app.8e7f9c01.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_392-\u5224\u65AD\u5B50\u5E8F\u5217" tabindex="-1"><a class="header-anchor" href="#_392-\u5224\u65AD\u5B50\u5E8F\u5217" aria-hidden="true">#</a> 392.\u5224\u65AD\u5B50\u5E8F\u5217</h2><h3 id="\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488" aria-hidden="true">#</a> \u53CC\u6307\u9488</h3><p>1\u3001\u5BF9s\u548Ct\u4F7F\u7528\u53CC\u6307\u9488<code>s_idx</code>\u548C<code>t_idx</code>\uFF0C\u5F53s\u4E2D\u5B57\u7B26\u5728t\u4E2D\u5B58\u5728\u65F6\u5C06<code>s_idx</code>\u524D\u8FDB\u5230\u4E0B\u4E00\u4E2A\u5B57\u7B26</p><p>2\u3001\u5BF9\u4E8Et\u5B57\u7B26\u4E32\uFF0C\u6CA1\u5224\u65AD\u4E00\u4F4D\u4E0D\u7BA1\u548Cs\u4E2D<code>s_idx</code>\u4F4D\u7F6E\u5B57\u7B26\u76F8\u4E0D\u76F8\u7B49\u90FD\u9700\u8981\u524D\u8FDB\u9053\u4E0B\u4E00\u4E2A\u5B57\u7B26\u5224\u65AD</p><p>3\u3001\u5F53<code>s_idx</code>\u548C<code>t_idx</code>\u4EFB\u610F\u4E00\u4E2A\u8D70\u5230\u5BF9\u5E94\u5B57\u7B26\u4E32\u672B\u5C3E\u65F6\u9000\u51FA\u5224\u65AD\u5FAA\u73AF</p><p>4\u3001\u6700\u540E\u76D8\u70B9<code>s_idx</code>\u662F\u5426\u5728\u5B57\u7B26\u4E32s\u7684\u672B\u5C3E\uFF0C\u5982\u679C\u662F\u5C31\u8BF4\u660Es\u4E2D\u5B57\u7B26\u90FD\u5728t\u4E2D\u627E\u5230\u4E86\uFF0C\u5C31\u662F\u5B50\u4E32</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isSubsequence</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">String</span> t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> t<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s_arr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t_arr <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> s_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> t_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span> s_ch <span class="token operator">=</span> s_arr<span class="token punctuation">[</span>s_idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>s_idx <span class="token operator">&lt;</span> s_arr<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> t_idx <span class="token operator">&lt;</span> t_arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// t\u5B57\u7B26\u4E32\u6BCF\u6B21\u90FD\u8981\u524D\u8FDB</span>
            <span class="token keyword">char</span> t_ch <span class="token operator">=</span> t_arr<span class="token punctuation">[</span>t_idx<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>t_ch <span class="token operator">==</span> s_ch<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// \u5B57\u7B26\u76F8\u7B49\uFF0Cs\u5B57\u7B26\u4E32\u5F80\u524D\u8D70\u4E00\u4F4D</span>
                s_idx<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>s_idx <span class="token operator">&lt;</span> s_arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    s_ch <span class="token operator">=</span> s_arr<span class="token punctuation">[</span>s_idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>           
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5982\u679Cs\u4E32\u6700\u540E\u4E00\u4E2A\u5B57\u7B26\u90FD\u80FD\u627E\u5230\u8BF4\u660E\u662F\u5B50\u4E32</span>
        <span class="token keyword">return</span> s_idx <span class="token operator">&gt;=</span> s_arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,7);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
