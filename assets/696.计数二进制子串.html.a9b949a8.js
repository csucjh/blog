import{c as n}from"./app.ceb38300.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_696-\u8BA1\u6570\u4E8C\u8FDB\u5236\u5B50\u4E32" tabindex="-1"><a class="header-anchor" href="#_696-\u8BA1\u6570\u4E8C\u8FDB\u5236\u5B50\u4E32" aria-hidden="true">#</a> 696.\u8BA1\u6570\u4E8C\u8FDB\u5236\u5B50\u4E32</h2><h3 id="\u66B4\u529B" tabindex="-1"><a class="header-anchor" href="#\u66B4\u529B" aria-hidden="true">#</a> \u66B4\u529B</h3><p>\u4E3B\u8981\u601D\u8DEF\u662F\u4EE5\u6BCF\u4E2A\u5B57\u7B26\u90FD\u505A\u4E00\u6B21\u8D77\u70B9\u5F80\u540E\u627E\uFF0C\u4F7F\u7528\u4E00\u4E2A\u8BA1\u6570\u5668\u5148\u9012\u589E\u540E\u9012\u51CF\uFF0C\u53EA\u8981\u80FD\u4ECE0--&gt;0\uFF0C\u8BF4\u660E\u5F53\u524D\u4F4D\u7F6E\u4F5C\u4E3A\u8D77\u70B9\u662F\u53EF\u4EE5\u627E\u5230\u4E00\u4E2A\u5B50\u4E32\u7684</p><p>\u4F46\u662F\u8FD9\u6837\u8981\u4F7F\u7528n<sup>2</sup>\u65F6\u95F4\u590D\u6742\u5EA6\u8D85\u65F6\u4E86\uFF0C\u6240\u4EE5\u867D\u7136\u601D\u8DEF\u6CA1\u95EE\u9898\uFF0C\u4F46\u662F\u89E3\u6CD5\u4E0D\u7B26\u5408\u9898\u610F</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countBinarySubstrings</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> charArr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> charArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// size: 0\u62161\u7684\u6570\u91CF, flag\u662F\u5426\u5207\u6362(0-&gt;1\u62161-&gt;0)</span>
            <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&gt;=</span> i<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>charArr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> charArr<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span><span class="token punctuation">{</span>
                            <span class="token comment">// \u53EA\u5141\u8BB8\u5207\u6362\u4E00\u6B21</span>
                            flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                            size<span class="token operator">--</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                            <span class="token keyword">break</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// \u5207\u6362\u6570\u5B57\u4E4B\u524D\u9012\u589Esize\uFF0C\u5207\u6362\u4E4B\u540E\u9012\u51CFsize</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>charArr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> charArr<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        size <span class="token operator">=</span> flag <span class="token operator">?</span> size<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> size<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    <span class="token comment">// \u9000\u51FA\u6761\u4EF6\u662F\u627E\u5230\u76EE\u6807\u5B57\u7B26\u4E32</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> flag<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        count<span class="token operator">++</span><span class="token punctuation">;</span>
                        <span class="token comment">//System.out.println(&quot;i:&quot;+i+&quot;-count:&quot;+count);</span>
                        <span class="token keyword">break</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                    size<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//System.out.println(&quot;i:&quot;+i+&quot;-size:&quot;+size+&quot;-flag:&quot;+flag);</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br></div></div><h3 id="\u5206\u7EC4\u8BA1\u6570" tabindex="-1"><a class="header-anchor" href="#\u5206\u7EC4\u8BA1\u6570" aria-hidden="true">#</a> \u5206\u7EC4\u8BA1\u6570</h3><p>\u6211\u4EEC\u53EF\u4EE5\u5C06\u5B57\u7B26\u4E32 s\u6309\u7167 0 \u548C 1 \u7684\u8FDE\u7EED\u6BB5\u5206\u7EC4<code>00110011</code>\u4F1A\u53D8\u6210[2,2,2,2]\uFF0C<code>10101</code>\u4F1A\u53D8\u6210[1,1,1,1,1]</p><p>1\u3001\u6570\u7EC4\u4E2D\u4E24\u4E2A\u76F8\u90BB\u7684\u6570\u4E00\u5B9A\u4EE3\u8868\u7684\u662F\u4E24\u79CD\u4E0D\u540C\u7684\u5B57\u7B26</p><p>2\u3001\u5047\u8BBE\u6570\u7EC4\u4E2D\u4E24\u4E2A\u76F8\u90BB\u7684\u6570\u5B57\u4E3A u\u6216\u8005 v\uFF0C\u5B83\u4EEC\u5BF9\u5E94\u7740 u \u4E2A 0 \u548C v \u4E2A 1\uFF0C\u6216\u8005 u \u4E2A 1 \u548C v \u4E2A 00\u3002\u5B83\u4EEC\u80FD\u7EC4\u6210\u7684\u6EE1\u8DB3\u6761\u4EF6\u7684\u5B50\u4E32\u6570\u76EE\u4E3Amin{u,v}</p><p>3\u3001\u53EA\u8981\u904D\u5386\u6240\u6709\u76F8\u90BB\u7684u, v\u6570\u5BF9\uFF0C\u6C42min{u,v}\u7684\u603B\u548C\u5373\u53EF</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countBinarySubstrings</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6BCF\u4E2A\u6570\u5B57\u6BB5\u7684\u6570\u91CF</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> seg_cnt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
        seg_cnt<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        
        <span class="token keyword">int</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// \u51FA\u73B0\u53E6\u4E00\u4E2A\u6570\u5B57\u6BB5\u65F6, \u8BA1\u6570\u6E38\u6807\u79FB\u5230\u4E0B\u4E00\u4F4D</span>
                idx<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token comment">// \u5F53\u524D\u6570\u5B57\u6BB5\u7684\u6570\u91CF\u7D2F\u52A0</span>
            seg_cnt<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//System.out.println(Arrays.toString(seg_cnt));</span>

        <span class="token comment">// \u5F00\u59CB\u5904\u7406\u6BB5\u8BA1\u6570\u6570\u7EC4</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> seg_cnt<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u76F8\u90BB\u4E24\u6BB5\u7684\u6570\u91CF\u7684\u6700\u5C0F\u503C\u8868\u793A\u53EF\u4EE5\u5F62\u6210\u7684\u5B50\u4E32\u6570\u91CF</span>
            count <span class="token operator">+=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>seg_cnt<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> seg_cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h3 id="\u5206\u7EC4\u8BA1\u6570-\u4E8C" tabindex="-1"><a class="header-anchor" href="#\u5206\u7EC4\u8BA1\u6570-\u4E8C" aria-hidden="true">#</a> \u5206\u7EC4\u8BA1\u6570(\u4E8C)</h3><p>\u57FA\u4E8E\u4E0A\u4E00\u79CD\u601D\u8DEF\u5206\u6790\uFF0C\u5176\u5B9E\u6211\u4EEC\u53EA\u9700\u8981\u4E0A\u4E00\u6BB5\u548C\u5F53\u524D\u6BB5\u7684\u6570\u5B57\u6BB5\u8BA1\u6570\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u4E24\u4E2A\u53D8\u91CF<code>last_cnt</code>\u548C<code>curr_cnt</code>\u6765\u8868\u793A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countBinarySubstrings</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> last_cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> curr_cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u51FA\u73B0\u53E6\u4E00\u4E2A\u6570\u5B57\u6BB5\u65F6</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> arr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// \u5982\u679C\u5F53\u524D\u6BB5\u5B58\u5728\u4E0A\u4E00\u6BB5\uFF0C\u5C31\u5BF9\u6BD4\u6700\u5C0F\u503C</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>last_cnt <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    count <span class="token operator">+=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>last_cnt<span class="token punctuation">,</span> curr_cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>

                <span class="token comment">// \u5C06\u5F53\u524D\u6BB5\u6570\u91CF\u4F5C\u4E3A\u4E0A\u4E00\u6BB5\uFF0C\u4FBF\u4E8E\u4E0B\u6B21\u7D2F\u8BA1\u5F53\u524D\u6BB5</span>
                last_cnt <span class="token operator">=</span> curr_cnt<span class="token punctuation">;</span>
                curr_cnt <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            
            <span class="token comment">// \u5F53\u524D\u6570\u5B57\u6BB5\u7684\u6570\u91CF\u7D2F\u52A0</span>
           curr_cnt<span class="token operator">++</span><span class="token punctuation">;</span> 
        <span class="token punctuation">}</span>

        <span class="token comment">// \u6700\u540E\u4E00\u6BB5\u4F5C\u4E3A\u5F53\u524D\u6BB5\u4E0D\u5B58\u5728\u6570\u5B57\u6BB5\u5207\u6362\uFF0C\u8981\u5355\u72EC\u5904\u7406</span>
        count <span class="token operator">+=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>last_cnt<span class="token punctuation">,</span> curr_cnt<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div>`,14);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
