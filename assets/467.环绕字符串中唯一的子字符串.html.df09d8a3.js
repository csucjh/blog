import{c as n}from"./app.6de1e928.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_467-\u73AF\u7ED5\u5B57\u7B26\u4E32\u4E2D\u552F\u4E00\u7684\u5B50\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#_467-\u73AF\u7ED5\u5B57\u7B26\u4E32\u4E2D\u552F\u4E00\u7684\u5B50\u5B57\u7B26\u4E32" aria-hidden="true">#</a> 467.\u73AF\u7ED5\u5B57\u7B26\u4E32\u4E2D\u552F\u4E00\u7684\u5B50\u5B57\u7B26\u4E32</h2><h3 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h3><p>\u9898\u610F\uFF0C\u5047\u8BBE\u6709\u4E00\u4E2A a-z \u65E0\u9650\u5FAA\u73AF\u7684\u5B57\u7B26\u4E32 s\uFF0C\u8BA1\u7B97\u5B83\u548C\u5B57\u7B26\u4E32 p \u4E2D\u6709\u591A\u5C11\u4E2A\u76F8\u7B49\u7684\u975E\u7A7A\u5B50\u4E32\u3002\u9898\u76EE\u4E2D\u552F\u4E00\u7684\u610F\u601D\u662F\uFF0C\u5047\u8BBE<code> p=aa</code>\uFF0C\u5B57\u7B26\u4E32 p \u4E2D\u6709\u4E24\u4E2A a\uFF0C\u76F8\u7B49\u7684\u5B50\u4E32\u8BB0\u4F5C\u4E00\u4E2A\uFF0C\u5373 a\u3002</p><p>\u4E3E\u4F8B1\uFF1A\u5F53 <code>p=cac</code> \u65F6\uFF0C\u6709 a \u548C c\uFF0C\u56E0\u4E3A<code> ac\u3001ca\u3001cac</code> \u4E0D\u662F s \u7684\u5B50\u4E32\u3002</p><p>\u4E3E\u4F8B2\uFF1A\u5F53 <code>p=bcabc </code>\u65F6\uFF0C\u6709 <code>a\u3001b\u3001ab\u3001c\u3001bc\u3001abc</code>\u3002</p><p>\u8FDE\u7EED\u5B50\u4E32a \u4E2D\u4EE5\u5B57\u7B26a \u7ED3\u5C3E\u7684\u8FDE\u7EED\u5B50\u4E32\u6709a\u3002 \u8FDE\u7EED\u5B50\u4E32b \u4E2D\u4EE5\u5B57\u7B26b \u7ED3\u5C3E\u7684\u8FDE\u7EED\u5B50\u4E32\u6709b\uFF1B\u800C\u8FDE\u7EED\u5B50\u4E32<code>ab </code>\u4EE5\u5B57\u7B26b \u7ED3\u5C3E\u7684\u8FDE\u7EED\u5B50\u4E32\u6709<code>b\u3001ab</code>\u3002 \u8FDE\u7EED\u5B50\u4E32c \u4E2D\u4EE5\u5B57\u7B26c \u7ED3\u5C3E\u7684\u8FDE\u7EED\u5B50\u4E32\u6709c\uFF0C\u8FDE\u7EED\u5B50\u4E32<code>bc</code> \u4E2D\u4EE5\u5B57\u7B26c \u7ED3\u5C3E\u7684\u8FDE\u7EED\u5B50\u4E32\u6709<code>c\u3001bc</code>\uFF1B\u8FDE\u7EED\u5B50\u4E32<code>abc</code> \u4E2D\u4EE5\u5B57\u7B26c \u7ED3\u5C3E\u7684\u8FDE\u7EED\u5B50\u4E32\u6709<code>c\u3001bc\u3001abc</code>\u3002 \u4E0D\u96BE\u53D1\u73B0\u4EE5\u8BE5\u5B57\u7B26\u7ED3\u5C3E\u7684\u8FDE\u7EED\u5B50\u4E32\u7684\u957F\u5EA6\uFF0C\u5C31\u7B49\u4E8E\u4EE5\u8BE5\u5B57\u7B26\u7ED3\u5C3E\u7684\u76F8\u7B49\u5B50\u4E32\u7684\u4E2A\u6570\u3002</p><p>\u6240\u4EE5\u6211\u4EEC\u53EA\u9700\u6C42\u51FA p \u4E2D\u4EE5\u6BCF\u4E2A\u5B57\u7B26\u7ED3\u5C3E\u7684\u6700\u957F\u8FDE\u7EED\u5B50\u4E32\u7684\u957F\u5EA6\u5373\u53EF\u3002\u7EDF\u8BA1\u6240\u6709\u4EE5\u6BCF\u4E2A\u5B57\u7B26\u7ED3\u5C3E\u7684\u6700\u957F\u8FDE\u7EED\u5B50\u4E32\u7684\u957F\u5EA6\uFF0C\u5C31\u662F\u552F\u4E00\u76F8\u7B49\u5B50\u4E32\u7684\u4E2A\u6570\u3002\u6CE8\u610F\uFF1A\u56E0\u4E3A s \u662F\u4E00\u4E2A\u5FAA\u73AF\u5B57\u7B26\u4E32\uFF0C\u6240\u4EE5 <code>za </code>\u4E5F\u662F\u8FDE\u7EED\u5B50\u4E32</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findSubstringInWraproundString</span><span class="token punctuation">(</span><span class="token class-name">String</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> charArr <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u4EE5\u5B57\u7B26\u7ED3\u5C3E\u7684\u6700\u957F\u8FDE\u7EED\u5B50\u4E32\u957F\u5EA6</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> end_ch_cnt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> charArr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>charArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> charArr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> charArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> charArr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// \u8FDE\u7EED\u5B57\u7B26\u7D2F\u52A0\u957F\u5EA6</span>
                len<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                <span class="token comment">// \u4E0B\u4E00\u4E2A\u8FDE\u7EED\u5B57\u7B26\u4E32\u4ECE1\u5F00\u59CB\u8BA1\u6570</span>
                len <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// \u5C06\u8FDE\u7EED\u5B57\u7B26\u4E32\u653E\u5230\u7ED3\u5C3E\u5B57\u7B26\u5BF9\u5E94\u7684\u6570\u7EC4\u4F4D\u7F6E</span>
            <span class="token keyword">int</span> idx <span class="token operator">=</span> charArr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token char">&#39;a&#39;</span><span class="token punctuation">;</span>
            <span class="token comment">// \u53D6\u6700\u957F\u957F\u5EA6</span>
            end_ch_cnt<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>end_ch_cnt<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//System.out.println(Arrays.toString(end_ch_cnt));</span>

        <span class="token comment">// \u5C06\u8FDE\u7EED\u5B57\u7B26\u4E32\u53CA\u5176\u5B50\u4E32\u6570\u653E\u5230map</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> cnt <span class="token operator">:</span> end_ch_cnt<span class="token punctuation">)</span><span class="token punctuation">{</span>
            sum <span class="token operator">+=</span> cnt<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>`,8);function t(e,c){return p}var r=s(a,[["render",t]]);export{r as default};
