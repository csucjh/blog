import{c as n}from"./app.008210ea.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_453-\u6700\u5C0F\u64CD\u4F5C\u6B21\u6570\u4F7F\u6570\u7EC4\u5143\u7D20\u76F8\u7B49" tabindex="-1"><a class="header-anchor" href="#_453-\u6700\u5C0F\u64CD\u4F5C\u6B21\u6570\u4F7F\u6570\u7EC4\u5143\u7D20\u76F8\u7B49" aria-hidden="true">#</a> 453.\u6700\u5C0F\u64CD\u4F5C\u6B21\u6570\u4F7F\u6570\u7EC4\u5143\u7D20\u76F8\u7B49</h2><h3 id="\u6570\u5B66\u9006\u5411\u601D\u7EF4" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B66\u9006\u5411\u601D\u7EF4" aria-hidden="true">#</a> \u6570\u5B66\u9006\u5411\u601D\u7EF4</h3><p>\u6BCF\u6B21\u64CD\u4F5C\u5C06\u4F1A\u4F7Fn-1\u4E2A\u5143\u7D20\u589E\u52A01\uFF0C\u7B49\u4EF7\u4E8E\u6BCF\u6B21\u64CD\u4F5C\u4F7F\u4E00\u4E2A\u5143\u7D20\u51CF1\uFF1B\u6240\u4EE5\u9898\u76EE\u7B49\u4EF7\u4E8E\u6BCF\u4E2A\u5143\u7D20\u90FD\u51CF\u5230\u6700\u5C0F\u503C\u9700\u8981\u7684\u6B21\u6570</p><p>(\u6211\u6700\u5F00\u59CB\u867D\u7136\u4E5F\u662F\u6570\u5B66\u601D\u7EF4\uFF0C\u4F46\u662F\u662F\u6B63\u5411\u7684\uFF0C\u867D\u7136\u4E5F\u6709\u516C\u5F0F\uFF0C\u4F46\u662F\u5FC5\u987B\u4FDD\u8BC1\u6240\u6709\u5143\u7D20\u76F8\u7B49\uFF0C\u56E0\u4E3A\u6B63\u5411\u64CD\u4F5C\u6BCF\u6B21\u662F\u6539\u53D8n-1\u4E2A\u5143\u7D20\uFF0C\u6700\u7EC8\u53EA\u80FD\u901A\u8FC7\u4E00\u90E8\u5206\u7528\u4F8B\uFF0C\u800C\u9006\u5411\u601D\u7EF4\u53D8\u6210\u4E86\u6BCF\u6B21\u64CD\u4F5C\u4EC5\u4F7F\u4E00\u4E2A\u5143\u7D20\u51CF\u4E00\uFF0C\u8981\u7B80\u5355\u5F88\u591A)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// \u6BCF\u6B21\u64CD\u4F5C\u5C06\u4F1A\u4F7Fn-1\u4E2A\u5143\u7D20\u589E\u52A01\uFF0C\u7B49\u4EF7\u4E8E\u6BCF\u6B21\u64CD\u4F5C\u4F7F\u4E00\u4E2A\u5143\u7D20\u51CF1</span>
    <span class="token comment">// \u6240\u4EE5\u9898\u76EE\u7B49\u4EF7\u4E8E\u6BCF\u4E2A\u5143\u7D20\u90FD\u51CF\u5230\u6700\u5C0F\u503C\u9700\u8981\u7684\u6B21\u6570</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">minMoves</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> min <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            min <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            count <span class="token operator">+=</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,5);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
