import{c as n}from"./app.b8e4ab78.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_537-\u590D\u6570\u4E58\u6CD5" tabindex="-1"><a class="header-anchor" href="#_537-\u590D\u6570\u4E58\u6CD5" aria-hidden="true">#</a> 537.\u590D\u6570\u4E58\u6CD5</h2><h3 id="\u5B57\u7B26\u4E32\u5206\u5272" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u5206\u5272" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u5206\u5272</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">complexNumberMultiply</span><span class="token punctuation">(</span><span class="token class-name">String</span> num1<span class="token punctuation">,</span> <span class="token class-name">String</span> num2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> idx <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// num1\u7684\u5B9E\u90E8a\u548C\u865A\u90E8b</span>
        <span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>num1<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> b <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>num1<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>idx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> num1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//System.out.println(a+&quot;:&quot;+b);</span>

        <span class="token comment">// num2\u7684\u5B9E\u90E8c\u548C\u865A\u90E8d</span>
        idx <span class="token operator">=</span> num2<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;+&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> c <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>num2<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> idx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>num2<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>idx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> num2<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//System.out.println(c+&quot;:&quot;+d);</span>

        <span class="token comment">// \u65B0\u7684\u5B9E\u90E8e\u548C\u865A\u90E8f</span>
        <span class="token keyword">int</span> e <span class="token operator">=</span> a <span class="token operator">*</span> c <span class="token operator">-</span> b <span class="token operator">*</span> d<span class="token punctuation">;</span>
        <span class="token keyword">int</span> f <span class="token operator">=</span> a <span class="token operator">*</span> d <span class="token operator">+</span> b <span class="token operator">*</span> c<span class="token punctuation">;</span>

        <span class="token comment">//return String.format(&quot;%s+%si&quot;, e, f);</span>
        <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;+&quot;</span><span class="token operator">+</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;i&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,3);function t(o,e){return p}var l=s(a,[["render",t]]);export{l as default};
