import{c as n}from"./app.b40bbcce.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_98-\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811" tabindex="-1"><a class="header-anchor" href="#_98-\u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811" aria-hidden="true">#</a> [98] \u9A8C\u8BC1\u4E8C\u53C9\u641C\u7D22\u6811</h2><p>\u4F7F\u7528Long\u7684\u53D6\u503C\u8303\u56F4\uFF0C\u662F\u56E0\u4E3A\u8FD9\u91CC\u5224\u65AD\u6839\u8282\u70B9\u8303\u56F4\u65F6\u4F7F\u7528\u4E86\u95ED\u533A\u95F4\uFF0C\u800C\u8282\u70B9\u7684\u53D6\u503C\u8303\u56F4\u672C\u5C31\u662Fint\u7684\u8303\u56F4\uFF0C\u6240\u4EE5\u5728\u52A01\u6216\u8005\u51CF1\u65F6\u4F1A\u8D85\u51FA\u53D6\u503C\u8303\u56F4\uFF0C\u5C31\u8981\u7528Long</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// \u4E0D\u80FD\u53EA\u5224\u65AD\u5F53\u524D\u6839\u8282\u70B9\u5DE6\u53F3\u5B50\u8282\u70B9\u7684\u5927\u5C0F\uFF0C\u800C\u662F\u5224\u65AD\u6839\u8282\u70B9\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u4E2D\u8282\u70B9\u7684\u5927\u5C0F</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">return</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span>MIN_VALUE<span class="token punctuation">,</span> <span class="token class-name">Long</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// minVal\u548CmaxVal\u662F\u5F53\u524Droot\u8282\u70B9\u7684\u53D6\u503C\u8303\u56F4</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">,</span> <span class="token keyword">long</span> minVal<span class="token punctuation">,</span> <span class="token keyword">long</span> maxVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5DE6\u5B50\u6811\u5FC5\u987B\u5C0F\u4E8E\u5176\u6839\u8282\u70B9\u7684\u503C\uFF0C\u4F46\u662F\u5FC5\u987B\u5927\u4E8E\u6839\u8282\u70B9\u7684\u7236\u8282\u70B9\u7684\u503C</span>
        <span class="token keyword">boolean</span> leftValid <span class="token operator">=</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> minVal <span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">boolean</span> rightValid <span class="token operator">=</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">long</span><span class="token punctuation">)</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">,</span>maxVal<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">boolean</span> rootValid <span class="token operator">=</span> root<span class="token punctuation">.</span>val <span class="token operator">&gt;=</span> minVal <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> maxVal<span class="token punctuation">;</span>

        <span class="token keyword">return</span> rootValid <span class="token operator">&amp;&amp;</span> leftValid <span class="token operator">&amp;&amp;</span> rightValid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>  
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div><p>\u4F7F\u7528\u5BF9\u8C61\u6765\u4F5C\u4E3A\u53D6\u503C\u8303\u56F4\u5B9E\u9645\u4E0A\u66F4\u4F18\u96C5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token comment">// \u4E0D\u80FD\u53EA\u5224\u65AD\u5F53\u524D\u6839\u8282\u70B9\u5DE6\u53F3\u5B50\u8282\u70B9\u7684\u5927\u5C0F\uFF0C\u800C\u662F\u5224\u65AD\u6839\u8282\u70B9\u5DE6\u5B50\u6811\u548C\u53F3\u5B50\u6811\u4E2D\u8282\u70B9\u7684\u5927\u5C0F</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">return</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// minVal\u548CmaxVal\u662F\u5F53\u524Droot\u8282\u70B9\u7684\u53D6\u503C\u8303\u56F4</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">,</span> <span class="token class-name">TreeNode</span> min<span class="token punctuation">,</span> <span class="token class-name">TreeNode</span> max<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5DE6\u5B50\u6811\u5FC5\u987B\u5C0F\u4E8E\u5176\u6839\u8282\u70B9\u7684\u503C\uFF0C\u4F46\u662F\u5FC5\u987B\u5927\u4E8E\u6839\u8282\u70B9\u7684\u7236\u8282\u70B9\u7684\u503C</span>
        <span class="token keyword">boolean</span> leftValid <span class="token operator">=</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">,</span> min <span class="token punctuation">,</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">boolean</span> rightValid <span class="token operator">=</span> <span class="token function">isValidBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">,</span> root <span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u8FD9\u91CC\u5BF9root\u7684\u503C\u9650\u5B9A\u8303\u56F4\u53D8\u6210\u4E86\u5426\u5B9A\u5F0F\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F(min,max)\u5F00\u533A\u95F4\u8303\u56F4 </span>
        <span class="token keyword">boolean</span> rootValid <span class="token operator">=</span> <span class="token punctuation">(</span>min <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&lt;=</span> min<span class="token punctuation">.</span>val<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>max <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> root<span class="token punctuation">.</span>val <span class="token operator">&gt;=</span> max<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token operator">!</span>rootValid <span class="token operator">&amp;&amp;</span> leftValid <span class="token operator">&amp;&amp;</span> rightValid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,5);function o(t,e){return p}var u=s(a,[["render",o]]);export{u as default};
