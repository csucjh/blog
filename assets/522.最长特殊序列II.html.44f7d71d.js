import{c as n}from"./app.c8728d3e.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_522-\u6700\u957F\u7279\u6B8A\u5E8F\u5217ii" tabindex="-1"><a class="header-anchor" href="#_522-\u6700\u957F\u7279\u6B8A\u5E8F\u5217ii" aria-hidden="true">#</a> 522.\u6700\u957F\u7279\u6B8A\u5E8F\u5217II</h2><h3 id="\u6392\u5E8F-\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F-\u53CC\u6307\u9488" aria-hidden="true">#</a> \u6392\u5E8F+\u53CC\u6307\u9488</h3><p>\u6392\u5E8F\u4E3B\u8981\u662F\u6309\u7167\u5B57\u7B26\u4E32\u7684\u957F\u5EA6\u964D\u5E8F\u6392\u5E8F\uFF0C\u7136\u540E\u627E\u5230\u7B2C\u4E00\u4E2A\u53EA\u51FA\u73B0\u4E00\u6B21\u800C\u4E14\u4E0D\u662F\u5176\u4ED6\u5B57\u7B26\u4E32\u5B50\u5E8F\u5217\u7684\u5B57\u7B26\u4E32</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findLUSlength</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u4E00\u7EA7key\uFF1A\u5B57\u7B26\u4E32\u7684\u957F\u5EA6  \u4E8C\u7EA7key\uFF1A\u5B57\u7B26\u4E32  \u4E8C\u7EA7value:\u5B57\u7B26\u4E32\u51FA\u73B0\u7684\u6B21\u6570</span>
        <span class="token comment">// \u6309\u7167\u5B57\u7B26\u4E32\u51FA\u73B0\u7684\u957F\u5EA6\u964D\u5E8F\u6392\u5E8F</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 		
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> strs<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> m <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Integer</span> cnt <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">getOrDefault</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            m<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> cnt<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//System.out.println(map);</span>

        <span class="token comment">// set\u5B58\u653E\u5386\u53F2\u5FAA\u73AF\u8FC7\u7A0B\u4E2D\u51FA\u73B0\u8FC7\u7684\u5386\u53F2\u5B57\u7B26\u4E32</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> cntMap <span class="token operator">=</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> cntEntry <span class="token operator">:</span> cntMap<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token class-name">String</span> str <span class="token operator">=</span> cntEntry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// \u53EA\u51FA\u73B0\u4E00\u6B21\u800C\u4E14\u4E0D\u662F\u5386\u53F2\u5B57\u7B26\u4E32\u7684\u5B50\u5E8F\u5217\u5C31\u662F\u6700\u957F\u975E\u516C\u5171\u5B50\u5E8F\u5217</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>cntEntry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">isSubOfHistory</span><span class="token punctuation">(</span>set<span class="token punctuation">,</span> str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token keyword">return</span> entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
				
                <span class="token comment">// \u5FAA\u73AF\u8FC7\u4F46\u4E0D\u6EE1\u8DB3\u7684\u5C31\u662F\u5386\u53F2\u5B57\u7B26\u4E32</span>
                set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5224\u65AD\u5F53\u524D\u5B57\u7B26\u4E32\u662F\u5426\u5386\u53F2\u5B57\u7B26\u4E32\u7684\u5B50\u5E8F\u5217</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isSubOfHistory</span><span class="token punctuation">(</span><span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> set<span class="token punctuation">,</span> <span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> str_arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> str_len <span class="token operator">=</span> str_arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> his <span class="token operator">:</span> set<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> his_arr <span class="token operator">=</span> his<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> his_len <span class="token operator">=</span> his_arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
            
            <span class="token keyword">int</span> str_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> his_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>str_idx <span class="token operator">&lt;</span> str_len <span class="token operator">&amp;&amp;</span> his_idx <span class="token operator">&lt;</span> his_len<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">char</span> his_ch <span class="token operator">=</span> his_arr<span class="token punctuation">[</span>his_idx<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">char</span> str_ch <span class="token operator">=</span> str_arr<span class="token punctuation">[</span>str_idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>his_ch <span class="token operator">==</span> str_ch<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    str_idx<span class="token operator">++</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">if</span><span class="token punctuation">(</span>str_idx <span class="token operator">&gt;=</span> str_len<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div>`,4);function t(e,c){return p}var u=s(a,[["render",t]]);export{u as default};
