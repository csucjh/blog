import{c as n}from"./app.ed6d2194.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="\u5251\u6307-offer-22-\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9" tabindex="-1"><a class="header-anchor" href="#\u5251\u6307-offer-22-\u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9" aria-hidden="true">#</a> \u5251\u6307 Offer 22. \u94FE\u8868\u4E2D\u5012\u6570\u7B2Ck\u4E2A\u8282\u70B9</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">ListNode</span> <span class="token function">getKthFromEnd</span><span class="token punctuation">(</span><span class="token class-name">ListNode</span> head<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5B9A\u4E49\u4E24\u4E2A\u6307\u9488</span>
        <span class="token class-name">ListNode</span> p1 <span class="token operator">=</span> head<span class="token punctuation">,</span> p2 <span class="token operator">=</span> head<span class="token punctuation">;</span>

        <span class="token comment">// p1\u5148\u524D\u8FDBk\u4E2A\uFF0C\u5269\u4E0Bn-k\uFF0C\u7136\u540Ep1,p2\u540C\u65F6\u524D\u8FDB\uFF0C\u5F53p1\u5230\u672B\u5C3E\u65F6p2\u521A\u597D\u8D70\u4E86n-k</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>next <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u56E0\u4E3A\u5FAA\u73AF\u9000\u51FA\u6761\u4EF6\u662Fp1.next,\u8FD9\u91CCk\u5927\u4E8E1\u5C31\u8981\u5F00\u59CB\u8BA9p2\u540C\u6B65\u8FDB\u884C\uFF0C\u5426\u5219\u6700\u540Ep2\u4F1A\u5C11\u8D70\u4E86\u4E00\u6B65</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        
                k<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                p2 <span class="token operator">=</span> p2<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            p1 <span class="token operator">=</span> p1<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> p2<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,2);function e(t,c){return p}var r=s(a,[["render",e]]);export{r as default};
