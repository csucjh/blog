import{c as n}from"./app.abe63d9c.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_189-\u8F6E\u8F6C\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#_189-\u8F6E\u8F6C\u6570\u7EC4" aria-hidden="true">#</a> 189.\u8F6E\u8F6C\u6570\u7EC4</h2><h3 id="\u4F7F\u7528\u989D\u5916\u6570\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528\u989D\u5916\u6570\u7EC4" aria-hidden="true">#</a> \u4F7F\u7528\u989D\u5916\u6570\u7EC4</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u957F\u5EA6\u53EF\u80FD\u8D85\u51FA\u6570\u7EC4\u957F\u5EA6\uFF0C\u6240\u4EE5\u5148\u6C42\u4F59</span>
        k <span class="token operator">=</span> k <span class="token operator">%</span> len<span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> rotates <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>len<span class="token punctuation">]</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            rotates<span class="token punctuation">[</span><span class="token punctuation">(</span>i<span class="token operator">+</span>k<span class="token punctuation">)</span><span class="token operator">%</span>len<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u66FF\u6362\u539F\u6570\u7EC4</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> rotates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="\u73AF\u72B6\u66FF\u6362" tabindex="-1"><a class="header-anchor" href="#\u73AF\u72B6\u66FF\u6362" aria-hidden="true">#</a> \u73AF\u72B6\u66FF\u6362</h3><p>\u603B\u4F53\u601D\u8DEF\u5C31\u662F\u5C06\u5F53\u524D\u4F4D\u7F6Eindex\u7684\u6570\u636E\u8986\u76D6\u5230(index+k)%n\u7684\u4F4D\u7F6E\uFF0C\u7528\u4E00\u4E2A\u4E34\u65F6\u53D8\u91CFlast_val\u4FDD\u5B58\u88AB\u8986\u76D6\u4F4D\u7F6E\u7684\u503C(\u5C31\u662F\u4E0B\u4E00\u6B21\u5F85\u4EA4\u6362\u7684\u503C)\uFF0C\u6BCF\u6B21\u4EA4\u6362\u540E\u66F4\u65B0last_val\u548C\u5176\u5BF9\u5E94\u7684index\u503C\uFF0C\u5C31\u80FD\u5FAA\u73AF\u66FF\u6362\u4E86\uFF0C\u5F53\u56DE\u5230\u5F53\u524D\u6B21\u5FAA\u73AF\u66FF\u6362\u7684\u8D77\u70B9i\u540E\u5E76\u4E0D\u80FD\u8BF4\u660E\u6240\u6709\u5143\u7D20\u90FD\u88AB\u66FF\u6362\u4E86\uFF0C\u56E0\u6B64\u4F1A\u6709\u4E2A\u5916\u5C42for\u5FAA\u73AF\u4F1A\u4ECEi\u7684\u4E0B\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB\u91CD\u65B0\u8FDB\u884C\u73AF\u72B6\u66FF\u6362\u8FC7\u7A0B</p><p><strong>\u9000\u51FA\u6761\u4EF6\uFF1A</strong></p><p>1\u3001\u5185\u5C42\u73AF\u72B6\u66FF\u6362\u5F53\u56DE\u5230\u73AF\u72B6\u66FF\u6362\u5F00\u59CB\u7684\u8D77\u70B9(index == i)\u65F6\u9000\u51FA\uFF1B</p><p>2\u3001\u5916\u5C42\u662F\u5F53\u603B\u7684\u4EA4\u6362\u5143\u7D20\u4E2A\u6570\u7B49\u4E8E\u603B\u957F\u5EA6\u65F6(count == n)</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rotate</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> k<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> len <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token comment">// \u957F\u5EA6\u53EF\u80FD\u8D85\u51FA\u6570\u7EC4\u957F\u5EA6\uFF0C\u6240\u4EE5\u5148\u6C42\u4F59</span>
        k <span class="token operator">=</span> k <span class="token operator">%</span> len<span class="token punctuation">;</span>

        <span class="token comment">// \u5B9A\u4E49\u4EA4\u6362\u5143\u7D20\u4E2A\u6570</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token comment">// i\u4E3A\u5F53\u524D\u6B21\u5FAA\u73AF\u7684\u8D77\u59CB\u7D22\u5F15\uFF0C\u6BCF\u6B21\u5FAA\u73AF\u56DE\u5230\u8D77\u59CB\u7D22\u5F15\u53EF\u80FD\u53EA\u5904\u7406\u4E86\u4E00\u90E8\u5206\u5143\u7D20</span>
        <span class="token comment">// \u56E0\u6B64\u8981\u4ECE\u4E0B\u4E00\u4E2A\u5143\u7D20\u5F00\u59CB,\u53EA\u5230\u5904\u7406\u5143\u7D20\u6570count\u7B49\u4E8E\u603B\u957F\u5EA6len</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>count <span class="token operator">==</span> len<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// System.out.println(&quot;count:&quot;+count);</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//System.out.println(&quot;i:&quot;+i);</span>

            <span class="token comment">// index\u4E3A\u5F53\u524D\u7D22\u5F15</span>
            <span class="token keyword">int</span> index <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token comment">// \u5F85\u4EA4\u6362\u7684\u503C(\u4E0A\u4E00\u6B21\u4EA4\u6362\u88AB\u8986\u76D6\u7684\u503C)</span>
            <span class="token keyword">int</span> last_val <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">do</span><span class="token punctuation">{</span>
                <span class="token comment">// \u8BA1\u7B97\u5F53\u524D\u5143\u7D20\u8F6E\u8F6C\u540E\u7684\u4F4D\u7F6E</span>
                <span class="token keyword">int</span> new_index <span class="token operator">=</span> <span class="token punctuation">(</span>index <span class="token operator">+</span> k<span class="token punctuation">)</span> <span class="token operator">%</span> len<span class="token punctuation">;</span>

                <span class="token comment">// \u4EA4\u6362\u5143\u7D20(temp\u548Cnew_index\u5BF9\u5E94\u7684\u503C)</span>
                <span class="token keyword">int</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>new_index<span class="token punctuation">]</span><span class="token punctuation">;</span>
                nums<span class="token punctuation">[</span>new_index<span class="token punctuation">]</span> <span class="token operator">=</span> last_val<span class="token punctuation">;</span>
                last_val <span class="token operator">=</span> temp<span class="token punctuation">;</span>
                <span class="token comment">//System.out.println((index+1)+&quot;:&quot;+(new_index+1)+&quot;:&quot;+Arrays.toString(nums));</span>
                <span class="token comment">// \u4E0B\u6B21\u4ECE\u65B0\u7D22\u5F15\u4F4D\u7F6E\u5F00\u59CB\u4EA4\u6362</span>
                index <span class="token operator">=</span> new_index<span class="token punctuation">;</span>

                <span class="token comment">// \u6BCF\u4EA4\u6362\u4E00\u6B21\u8BA1\u6570</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span> 
            <span class="token punctuation">}</span>
            <span class="token comment">// \u9000\u51FA\u6761\u4EF6\u662F\u56DE\u5230\u4E86\u539F\u70B9</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>index <span class="token operator">!=</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br></div></div>`,9);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
