import{c as n}from"./app.6de1e928.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_640-\u6C42\u89E3\u65B9\u7A0B" tabindex="-1"><a class="header-anchor" href="#_640-\u6C42\u89E3\u65B9\u7A0B" aria-hidden="true">#</a> 640.\u6C42\u89E3\u65B9\u7A0B</h2><h3 id="\u62C6\u5206\u5B57\u7B26" tabindex="-1"><a class="header-anchor" href="#\u62C6\u5206\u5B57\u7B26" aria-hidden="true">#</a> \u62C6\u5206\u5B57\u7B26</h3><p>\u601D\u8DEF</p><p>1\u3001\u5206\u5DE6\u53F3\u4E24\u8FB9\u8BA1\u7B97\u5E38\u6570\u9879\u548Cx\u7684\u7CFB\u6570\u548C\uFF0C\u4EE5\u7B49\u53F7\u5206\u5272\uFF0C\u627E\u51FA\u7B49\u53F7\u4F4D\u7F6E<code>eq_idx</code></p><p>2\u3001\u627E\u51FA\u7B49\u53F7\u5DE6\u8FB9<code>[0, eq_idx)</code>\u7684\u5E38\u6570\u9879\u7684\u548C<code>left_num_sum </code>\u4EE5\u53CA\u672A\u77E5\u6570x\u7684\u7CFB\u7EDF\u9879\u7684\u548C<code>left_x_sum </code></p><p>3\u3001\u627E\u51FA\u7B49\u53F7\u53F3\u8FB9\u8FB9<code>(eq_idx, n]</code>\u7684\u5E38\u6570\u9879\u7684\u548C<code>right_num_sum </code>\u4EE5\u53CA\u672A\u77E5\u6570x\u7684\u7CFB\u7EDF\u9879\u7684\u548C<code>right_x_sum </code></p><p>4\u3001\u5C06x\u7EDF\u4E00\u79FB\u52A8\u5230\u7B49\u53F7\u5DE6\u8FB9\uFF0C\u5E38\u6570\u9879\u79FB\u5230\u7B49\u53F7\u53F3\u8FB9\uFF0C\u5C31\u6709<code>(left_x_sum - right_x_sum) * x = ( right_num_sum - left_num_sum)</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">solveEquation</span><span class="token punctuation">(</span><span class="token class-name">String</span> equation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> equation<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u8BB0\u5F55\u7B26\u53F7\u4F4D\u7F6E</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sign <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">char</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">char</span> ch <span class="token operator">=</span> equation<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>ch <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span> <span class="token operator">||</span> ch <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span> <span class="token operator">||</span> ch <span class="token operator">==</span> <span class="token char">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                sign<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> ch<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// \u5206\u5DE6\u53F3\u4E24\u8FB9\u8BA1\u7B97\u5E38\u6570\u9879\u548Cx\u7684\u7CFB\u6570\u548C\uFF0C\u4EE5\u7B49\u53F7\u5206\u5272</span>
        <span class="token keyword">int</span> eq_idx <span class="token operator">=</span> equation<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&quot;=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//System.out.println(&quot;eq_idx:&quot; + eq_idx);</span>

        <span class="token comment">// \u5148\u8BA1\u7B97\u7B49\u53F7\u5DE6\u8FB9</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> left <span class="token operator">=</span> <span class="token function">count_sum</span><span class="token punctuation">(</span>sign<span class="token punctuation">,</span> equation<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> eq_idx<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//System.out.println(&quot;left_x_sum:&quot; + left[0] +&quot;-left_num_sum:&quot; + left[1]);</span>

        <span class="token comment">// \u518D\u8BA1\u7B97\u7B49\u53F7\u53F3\u8FB9</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> right <span class="token operator">=</span> <span class="token function">count_sum</span><span class="token punctuation">(</span>sign<span class="token punctuation">,</span> equation<span class="token punctuation">,</span> eq_idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//System.out.println(&quot;right_x_sum:&quot; + right[0] +&quot;-right_num_sum:&quot; + right[1]);</span>
    
        <span class="token comment">// \u5DE6\u53F3\u79FB\u9879\u5316\u7B80</span>
        <span class="token keyword">int</span> num_sub <span class="token operator">=</span> right<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> left<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> x_sub <span class="token operator">=</span> left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> right<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>x_sub <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> num_sub <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;Infinite solutions&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>x_sub <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;No solution&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token string">&quot;x=&quot;</span> <span class="token operator">+</span> <span class="token punctuation">(</span>num_sub <span class="token operator">/</span> x_sub<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u63D0\u53D6\u51FAx\u7684\u7CFB\u6570</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">slice_x</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
        str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//System.out.print(str+&quot;:&quot;);</span>

        <span class="token comment">// \u5982\u679C\u662F&quot;x&quot; \u6216 &quot;+x&quot; \u6216&quot;-x&quot;\u5F62\u5F0F\u9700\u8981\u8865\u9F50\u9690\u85CF\u7CFB\u65701\uFF0C\u5426\u5219\u662F\u6709\u663E\u6027\u7CFB\u6570\u7684</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;+&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> str<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            str <span class="token operator">+=</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//System.out.println(str);</span>
        <span class="token keyword">return</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BA1\u7B97\u7B49\u53F7\u67D0\u8FB9\u533A\u95F4\u8303\u56F4[start, end)\u8303\u56F4\u5185\u7684\u5E38\u6570\u9879\u7CFB\u6570\u548C\u4EE5\u53CAx\u7CFB\u6570\u9879\u548C</span>
    <span class="token comment">// \u8FD4\u56DE\u503Cint[0]\u8868\u793Ax\u7CFB\u6570\u9879\u548C\uFF0Cint[1]\u8868\u793A\u5E38\u6570\u9879\u7CFB\u6570\u548C</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">count_sum</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sign<span class="token punctuation">,</span> <span class="token class-name">String</span> equation<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">int</span> x_sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> num_sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> last_sign_idx <span class="token operator">=</span> start<span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> end<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">==</span> end <span class="token operator">||</span> sign<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;+&#39;</span> <span class="token operator">||</span> sign<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">&#39;-&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&gt;</span> last_sign_idx<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token class-name">String</span> str <span class="token operator">=</span> equation<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>last_sign_idx<span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">//System.out.println(str);</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;x&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                        x_sum <span class="token operator">+=</span> <span class="token function">slice_x</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                        <span class="token comment">//System.out.println(str);</span>
                        num_sum <span class="token operator">+=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>

                    last_sign_idx <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sum <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        sum<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> x_sum<span class="token punctuation">;</span>
        sum<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> num_sum<span class="token punctuation">;</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br></div></div>`,8);function t(o,e){return p}var l=s(a,[["render",t]]);export{l as default};
