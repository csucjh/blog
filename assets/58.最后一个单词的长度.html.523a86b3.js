import{c as n}from"./app.6de1e928.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_58-\u6700\u540E\u4E00\u4E2A\u5355\u8BCD\u7684\u957F\u5EA6" tabindex="-1"><a class="header-anchor" href="#_58-\u6700\u540E\u4E00\u4E2A\u5355\u8BCD\u7684\u957F\u5EA6" aria-hidden="true">#</a> 58.\u6700\u540E\u4E00\u4E2A\u5355\u8BCD\u7684\u957F\u5EA6</h2><h3 id="\u539F\u5730\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u539F\u5730\u904D\u5386" aria-hidden="true">#</a> \u539F\u5730\u904D\u5386</h3><p>1\u3001\u5012\u6570\u7B2C\u4E00\u4E2A\u4E0D\u4E3A\u7A7A\u7684\u5B57\u7B26\u662Fend</p><p>2\u3001\u627E\u5230end\u540E\uFF0C\u5F53\u524D\u5B57\u7B26\u7684\u4E0B\u4E00\u4E2A\u5B57\u7B26\u662F\u7A7A\u6216\u8005\u662F\u6700\u540E\u4E00\u4E2A\u5B57\u7B26\u65F6\u5C31\u662Fstart</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">lengthOfLastWord</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        
        <span class="token comment">// \u9006\u5E8F\u5904\u7406</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u5012\u6570\u7B2C\u4E00\u4E2A\u4E0D\u4E3A\u7A7A\u7684\u5B57\u7B26\u662Fend</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token char">&#39; &#39;</span> <span class="token operator">&amp;&amp;</span> end <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                start <span class="token operator">=</span> end <span class="token operator">=</span> i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// \u627E\u5230end\u540E\uFF0C\u5F53\u524D\u5B57\u7B26\u7684\u4E0B\u4E00\u4E2A\u5B57\u7B26\u662F\u7A7A\u6216\u8005\u662F\u6700\u540E\u4E00\u4E2A\u5B57\u7B26\u65F6\u5C31\u662Fstart</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>end <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token char">&#39; &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                start <span class="token operator">=</span> i<span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//System.out.println(start+&quot;:&quot;+end);</span>
        <span class="token keyword">return</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div>`,5);function t(e,o){return p}var l=s(a,[["render",t]]);export{l as default};
