import{c as n}from"./app.abe63d9c.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_498-\u5BF9\u89D2\u7EBF\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#_498-\u5BF9\u89D2\u7EBF\u904D\u5386" aria-hidden="true">#</a> 498.\u5BF9\u89D2\u7EBF\u904D\u5386</h2><h3 id="\u6A21\u62DF\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF\u904D\u5386" aria-hidden="true">#</a> \u6A21\u62DF\u904D\u5386</h3><p><strong>\u601D\u8DEF</strong></p><p>1\u3001\u5206\u5DE6\u53F3\u5BF9\u89D2\u7EBF\u904D\u5386</p><p>2\u3001\u53F3\u4E0A\u5BF9\u89D2\u7EBF\u5230\u8FBE\u6700\u540E\u4E00\u4E2A\u8282\u70B9[i,j]\u540E\u6709\u4E24\u79CD\u9009\u62E9\uFF1B\u5F53\u53F3\u4FA7\u8282\u70B9\u5B58\u5728\uFF0C\u76F4\u63A5\u53F3\u79FB\uFF1B\u5F53\u65E0\u53F3\u4FA7\u8282\u70B9\u65F6\uFF0C\u4E0B\u79FB\uFF1B</p><p>\u53C2\u8003\u5982\u4E0B\u793A\u610F\u56FE</p><p><img src="https://user-images.githubusercontent.com/12841424/147410023-3ebca534-d44f-498f-a4a9-67c8a7ef8d91.png" alt="image"></p><p>3\u3001\u5DE6\u4E0B\u5BF9\u89D2\u7EBF\u5230\u8FBE\u6700\u540E\u4E00\u4E2A\u8282\u70B9[i,j]\u540E\u6709\u4E24\u79CD\u9009\u62E9\uFF1B\u5F53\u4E0B\u4FA7\u8282\u70B9\u5B58\u5728\uFF0C\u76F4\u63A5\u4E0B\u79FB\uFF1B\u5F53\u65E0\u4E0B\u4FA7\u8282\u70B9\u65F6\uFF0C\u53F3\u79FB</p><p>\u53C2\u8003\u5982\u4E0B\u793A\u610F\u56FE</p><p><img src="https://user-images.githubusercontent.com/12841424/147410003-12293134-32c2-4739-add4-4efbf983db78.png" alt="image"></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">findDiagonalOrder</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> mat<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> m <span class="token operator">=</span> mat<span class="token punctuation">.</span>length<span class="token punctuation">,</span> n <span class="token operator">=</span> mat<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span>m <span class="token operator">*</span> n<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span><span class="token punctuation">(</span>index <span class="token operator">&lt;</span> m <span class="token operator">*</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>

            <span class="token comment">// \u53F3\u4E0A\u5BF9\u89D2\u7EBF</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//System.out.println(&quot;\u53F3\u4E0A i:&quot;+i+&quot;-j:&quot;+j+&quot;:val&quot;+mat[i][j]);</span>
                arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> mat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                i<span class="token operator">--</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            i<span class="token operator">++</span><span class="token punctuation">;</span> j<span class="token operator">--</span><span class="token punctuation">;</span>
 
            <span class="token comment">// \u53F3\u4E0A\u5BF9\u89D2\u7EBF\u5230\u8FBE\u6700\u540E\u4E00\u4E2A\u8282\u70B9[i,j]\u540E\u6709\u4E24\u79CD\u9009\u62E9</span>
            <span class="token comment">// \u5F53\u53F3\u4FA7\u8282\u70B9\u5B58\u5728\uFF0C\u76F4\u63A5\u53F3\u79FB</span>
            <span class="token comment">// \u5F53\u65E0\u53F3\u4FA7\u8282\u70B9\u65F6\uFF0C\u4E0B\u79FB</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">{</span>
                j<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// \u5DE6\u4E0B\u5BF9\u89D2\u7EBF</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">//System.out.println(&quot;\u5DE6\u4E0B i:&quot;+i+&quot;-j:&quot;+j+&quot;:val&quot;+mat[i][j]);</span>
                arr<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> mat<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            i<span class="token operator">--</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5DE6\u4E0B\u5BF9\u89D2\u7EBF\u5230\u8FBE\u6700\u540E\u4E00\u4E2A\u8282\u70B9[i,j]\u540E\u6709\u4E24\u79CD\u9009\u62E9</span>
            <span class="token comment">// \u5F53\u4E0B\u4FA7\u8282\u70B9\u5B58\u5728\uFF0C\u76F4\u63A5\u4E0B\u79FB</span>
            <span class="token comment">// \u5F53\u65E0\u4E0B\u4FA7\u8282\u70B9\u65F6\uFF0C\u53F3\u79FB</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">&lt;</span> m<span class="token punctuation">)</span><span class="token punctuation">{</span>
                i<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
                j<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> arr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div>`,11);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
