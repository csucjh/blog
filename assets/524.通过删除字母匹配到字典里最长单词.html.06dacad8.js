import{c as n}from"./app.4db2b838.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_524-\u901A\u8FC7\u5220\u9664\u5B57\u6BCD\u5339\u914D\u5230\u5B57\u5178\u91CC\u6700\u957F\u5355\u8BCD" tabindex="-1"><a class="header-anchor" href="#_524-\u901A\u8FC7\u5220\u9664\u5B57\u6BCD\u5339\u914D\u5230\u5B57\u5178\u91CC\u6700\u957F\u5355\u8BCD" aria-hidden="true">#</a> 524.\u901A\u8FC7\u5220\u9664\u5B57\u6BCD\u5339\u914D\u5230\u5B57\u5178\u91CC\u6700\u957F\u5355\u8BCD</h2><h3 id="\u53CC\u6307\u9488" tabindex="-1"><a class="header-anchor" href="#\u53CC\u6307\u9488" aria-hidden="true">#</a> \u53CC\u6307\u9488</h3><p>1\u3001\u672C\u9898\u662F[392.\u5224\u65AD\u5B50\u5E8F\u5217]\u7684\u5347\u534E\uFF0C\u53EF\u4EE5\u5148\u770B392\u7684\u9898\u89E3</p><p>2\u3001\u672C\u9898\u5728392\u7684\u57FA\u7840\u4E0A\u5347\u534E\u70B9\uFF1A</p><ul><li>\u8BB0\u5F55\u5B50\u5E8F\u5217\u7684\u6700\u5927\u957F\u5EA6</li><li>\u627E\u51FA\u6240\u6709\u957F\u5EA6\u7B49\u4E8E\u6700\u5927\u957F\u5EA6\u7684\u5B50\u5E8F\u5217</li><li>\u5BF9\u6240\u6709\u6700\u5927\u957F\u5EA6\u7684\u5B50\u5E8F\u5217\u6309\u81EA\u7136\u987A\u5E8F\u6392\u5E8F\u53D6\u7B2C\u4E00\u4E2A</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">findLongestWord</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> dictionary<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6700\u5927\u957F\u5EA6</span>
        <span class="token keyword">int</span> longest <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token comment">// \u6700\u5927\u957F\u5EA6\u5BF9\u5E94\u7684\u5B57\u7B26\u4E32\u5217\u8868</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> s_len <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> s_arr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u5224\u65ADdictionary\u4E2D\u6BCF\u4E2A\u5B57\u7B26\u4E32t\u662F\u5426\u4E3As\u7684\u76F8\u5BF9\u5B50\u4E32</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> t <span class="token operator">:</span> dictionary<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">int</span> t_len <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>s_len <span class="token operator">&lt;</span> t_len<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> t_arr <span class="token operator">=</span> t<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            
            <span class="token keyword">int</span> s_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> t_idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">char</span> t_ch <span class="token operator">=</span> t_arr<span class="token punctuation">[</span>t_idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span><span class="token punctuation">(</span>s_idx <span class="token operator">&lt;</span> s_len <span class="token operator">&amp;&amp;</span> t_idx <span class="token operator">&lt;</span> t_len<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token comment">// s\u5B57\u7B26\u4E32\u6BCF\u6B21\u90FD\u8981\u524D\u8FDB</span>
                <span class="token keyword">char</span> s_ch <span class="token operator">=</span> s_arr<span class="token punctuation">[</span>s_idx<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span><span class="token punctuation">(</span>t_ch <span class="token operator">==</span> s_ch<span class="token punctuation">)</span><span class="token punctuation">{</span>
                    <span class="token comment">// \u5B57\u7B26\u76F8\u7B49\uFF0Ct\u5B57\u7B26\u4E32\u5F80\u524D\u8D70\u4E00\u4F4D</span>
                    t_idx<span class="token operator">++</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span>t_idx <span class="token operator">&lt;</span> t_len<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        t_ch <span class="token operator">=</span> t_arr<span class="token punctuation">[</span>t_idx<span class="token punctuation">]</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>           
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// \u5982\u679Ct\u4E0D\u662Fs\u7684\u5B50\u4E32 \u6216 t\u7684\u957F\u5EA6\u5C0F\u4E8Elongest\uFF0C\u5904\u7406\u4E0B\u4E00\u4E2A</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>t_idx <span class="token operator">&lt;</span> t_len <span class="token operator">||</span> t_len <span class="token operator">&lt;</span> longest<span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token comment">// t\u662Fs\u7684\u5B50\u4E32\uFF0C\u5224\u65AD\u957F\u5EA6\u662F\u5426\u6700\u5927\u957F\u5EA6</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>t_len <span class="token operator">&gt;</span> longest<span class="token punctuation">)</span><span class="token punctuation">{</span>
                longest <span class="token operator">=</span> t_len<span class="token punctuation">;</span>
                list<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        
            <span class="token punctuation">}</span>

            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>list<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        list<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> a<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//System.out.println(&quot;longest:&quot;+longest+&quot;-list:&quot;+list);</span>

        <span class="token keyword">return</span> list<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div>`,6);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
