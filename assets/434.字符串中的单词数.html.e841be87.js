import{c as n}from"./app.37026570.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_434-\u5B57\u7B26\u4E32\u4E2D\u7684\u5355\u8BCD\u6570" tabindex="-1"><a class="header-anchor" href="#_434-\u5B57\u7B26\u4E32\u4E2D\u7684\u5355\u8BCD\u6570" aria-hidden="true">#</a> 434.\u5B57\u7B26\u4E32\u4E2D\u7684\u5355\u8BCD\u6570</h2><h3 id="\u5B57\u7B26\u4E32\u62C6\u5206" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u62C6\u5206" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u62C6\u5206</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countSegments</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\ &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u8FC7\u6EE4\u7A7A\u5B57\u7B26\u4E32</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="\u539F\u5730\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u539F\u5730\u904D\u5386" aria-hidden="true">#</a> \u539F\u5730\u904D\u5386</h3><p>\u8BA1\u7B97\u5B57\u7B26\u4E32\u4E2D\u5355\u8BCD\u7684\u6570\u91CF\uFF0C\u5C31\u7B49\u540C\u4E8E\u8BA1\u6570\u5355\u8BCD\u7684\u7B2C\u4E00\u4E2A\u4E0B\u6807\u7684\u4E2A\u6570\u3002\u56E0\u6B64\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u904D\u5386\u6574\u4E2A\u5B57\u7B26\u4E32\uFF0C\u7EDF\u8BA1\u6BCF\u4E2A\u5355\u8BCD\u7684\u7B2C\u4E00\u4E2A\u4E0B\u6807\u7684\u6570\u76EE\u5373\u53EF\u3002</p><p>\u6EE1\u8DB3\u5355\u8BCD\u7684\u7B2C\u4E00\u4E2A\u4E0B\u6807\u6709\u4EE5\u4E0B\u4E24\u4E2A\u6761\u4EF6\uFF1A</p><p>1\u3001\u8BE5\u4E0B\u6807\u5BF9\u5E94\u7684\u5B57\u7B26\u4E0D\u4E3A\u7A7A\u683C\uFF1B</p><p>2\u3001\u8BE5\u4E0B\u6807\u4E3A\u521D\u59CB\u4E0B\u6807\u6216\u8005\u8BE5\u4E0B\u6807\u7684\u524D\u4E0B\u6807\u5BF9\u5E94\u7684\u5B57\u7B26\u4E3A\u7A7A\u683C\uFF1B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">countSegments</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>s <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> s<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u8BE5\u4E0B\u6807\u5BF9\u5E94\u7684\u5B57\u7B26\u4E0D\u4E3A\u7A7A\u683C</span>
            <span class="token comment">// \u8BE5\u4E0B\u6807\u4E3A\u521D\u59CB\u4E0B\u6807\u6216\u8005\u8BE5\u4E0B\u6807\u7684\u524D\u4E0B\u6807\u5BF9\u5E94\u7684\u5B57\u7B26\u4E3A\u7A7A\u683C</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token char">&#39; &#39;</span> <span class="token operator">==</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token char">&#39; &#39;</span> <span class="token operator">!=</span> s<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                count<span class="token operator">++</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> count<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,9);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
