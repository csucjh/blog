import{c as n}from"./app.f28702b3.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_49-\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u5206\u7EC4" tabindex="-1"><a class="header-anchor" href="#_49-\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u5206\u7EC4" aria-hidden="true">#</a> 49.\u5B57\u6BCD\u5F02\u4F4D\u8BCD\u5206\u7EC4</h2><h3 id="\u6392\u5E8F-map" tabindex="-1"><a class="header-anchor" href="#\u6392\u5E8F-map" aria-hidden="true">#</a> \u6392\u5E8F+Map</h3><p>\u5F02\u5473\u8BCD\u53EA\u662F\u5B57\u6BCD\u987A\u5E8F\u4E0D\u540C\uFF0C\u6392\u5E8F\u540E\u5C31\u4F1A\u5B8C\u5168\u4E00\u6837\uFF0C\u56E0\u6B64\u6211\u4EEC\u4F7F\u7528map\u6765\u6807\u8BC6\u5206\u7EC4\uFF0Ckey\u662F\u5B57\u7B26\u4E32\u6392\u5E8F\u540E\u7684\u503C\uFF0Cvalue\u5C31\u662F\u5177\u6709\u76F8\u540Ckey\u7684\u5B57\u7B26\u4E32</p><p>\u6211\u4EEC\u4F7F\u7528<code>computeIfAbsent</code>\u51FD\u6570\u6765\u7B80\u5316map\u64CD\u4F5C\uFF0C\u6CE8\u610F\u8FD9\u91CC\u8981\u533A\u5206<code>putIfAbsent</code>\u7684\u533A\u522B</p><p>1\u3001<code>computeIfAbsent</code>\u5F53key\u4E0D\u5B58\u5728\u65F6\u521D\u59CB\u5316\u5E76\u8FD4\u56DE\u5F53\u524Dkey\u503C\uFF0Ckey\u5B58\u5728\u65F6\u76F4\u63A5\u8FD4\u56DE\u5F53\u524Dkey\u503C</p><p>2\u3001<code>putIfAbsent</code>key\u4E0D\u5B58\u5728\u65F6\u521D\u59CB\u5316\u5E76\u8FD4\u56DEkey\u7684\u4E0A\u4E00\u4E2A\u503Cnull\uFF0Ckey\u5B58\u5728\u65F6\u76F4\u63A5\u8FD4\u56DE\u5F53\u524Dkey\u503C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">groupAnagrams</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// key: \u6392\u5E8F\u540E\u7684\u5B57\u7B26\u4E32, value\uFF1A\u5177\u6709\u76F8\u540Ckey\u7684value</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token function">sort</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// computeIfAbsent\u5F53key\u4E0D\u5B58\u5728\u65F6\u521D\u59CB\u5316\u5E76\u8FD4\u56DE\u5F53\u524Dkey\u503C</span>
            <span class="token comment">// putIfAbsent\u5F53key\u4E0D\u5B58\u5728\u65F6\u521D\u59CB\u5316\u5E76\u8FD4\u56DEkey\u7684\u4E0A\u4E00\u4E2A\u503C\uFF0C\u6240\u4EE5\u8FD9\u91CC\u7528computeIfAbsent</span>
            map<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> k <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
		
        <span class="token comment">//System.out.println(map);</span>
        <span class="token comment">// \u5C06Collection\u8F6C\u4E3AList</span>
        <span class="token keyword">return</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5B57\u7B26\u4E32\u6392\u5E8F</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> charArr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>charArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>charArr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h3 id="\u6570\u7EC4-map" tabindex="-1"><a class="header-anchor" href="#\u6570\u7EC4-map" aria-hidden="true">#</a> \u6570\u7EC4+Map</h3><p>\u901A\u8FC7\u4E0A\u8FF0\u601D\u8DEF\u53D1\u73B0\uFF0C\u5176\u5B9E\u6838\u5FC3\u5728\u4E8E\u627E\u5230\u5F02\u4F4D\u8BCD\u7684\u76F8\u540C\u7684\u7F16\u7801\u503C\uFF0C\u4F7F\u7528\u6392\u5E8F\u65B9\u5F0F\u5C31\u662F\u5C06\u6392\u5E8F\u540E\u7684\u5B57\u7B26\u4E32\u4F5C\u4E3A\u7F16\u7801\u503C\uFF0C\u5176\u5B9E\u6211\u4EEC\u4E5F\u53EF\u4EE5\u4F7F\u7528\u6570\u7EC4\u8BB0\u5F55\u5B57\u7B26\u51FA\u73B0\u7684\u6B21\u6570\u6765\u5B9E\u73B0\u7F16\u7801</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">groupAnagrams</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// key: \u6392\u5E8F\u540E\u7684\u5B57\u7B26\u4E32, value\uFF1A\u5177\u6709\u76F8\u540Ckey\u7684value</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> key <span class="token operator">=</span> <span class="token function">encode</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// computeIfAbsent\u5F53key\u4E0D\u5B58\u5728\u65F6\u521D\u59CB\u5316\u5E76\u8FD4\u56DE\u5F53\u524Dkey\u503C</span>
            <span class="token comment">// putIfAbsent\u5F53key\u4E0D\u5B58\u5728\u65F6\u521D\u59CB\u5316\u5E76\u8FD4\u56DEkey\u7684\u4E0A\u4E00\u4E2A\u503C\uFF0C\u6240\u4EE5\u8FD9\u91CC\u7528computeIfAbsent</span>
            map<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> k <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">//System.out.println(map);</span>
        <span class="token comment">// \u5C06Collection\u8F6C\u4E3AList</span>
        <span class="token keyword">return</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u7F16\u7801</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">encode</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> charArr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">char</span> ch <span class="token operator">:</span> charArr<span class="token punctuation">)</span><span class="token punctuation">{</span>
            arr<span class="token punctuation">[</span>ch<span class="token operator">-</span><span class="token char">&#39;a&#39;</span><span class="token punctuation">]</span><span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,10);function t(e,c){return p}var u=s(a,[["render",t]]);export{u as default};
