import{c as n}from"./app.867485a5.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_538-\u628A\u4E8C\u53C9\u641C\u7D22\u6811\u8F6C\u6362\u4E3A\u7D2F\u52A0\u6811" tabindex="-1"><a class="header-anchor" href="#_538-\u628A\u4E8C\u53C9\u641C\u7D22\u6811\u8F6C\u6362\u4E3A\u7D2F\u52A0\u6811" aria-hidden="true">#</a> [538] \u628A\u4E8C\u53C9\u641C\u7D22\u6811\u8F6C\u6362\u4E3A\u7D2F\u52A0\u6811</h2><h3 id="\u540E\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u540E\u5E8F\u904D\u5386</h3><p>\u601D\u8DEF\uFF1A\u5982\u679C\u8981\u6C42\u56FE\u4E2D\u8282\u70B91\u7684\u7D2F\u52A0\u503C\uFF0C\u5B9E\u9645\u4E0A\u5C31\u662F\u6C42\u56FE\u4E2D\u7EA2\u5708\u5185\u7684\u8282\u70B9\u7684\u548C\uFF0CBST\u7684\u7279\u6027\u5C31\u662F\u5DE6\u5B50\u6811\u5C0F\u4E8E\u6839\u8282\u70B9\uFF0C\u6839\u8282\u70B9\u5C0F\u4E8E\u53F3\u5B50\u6811</p><p>\u8003\u8651\u7684BST\u7684\u540E\u5E8F\u904D\u5386\u662F[\u53F3\u5B50\u6570\u2014&gt;\u6839\u2014&gt;\u5DE6\u5B50\u6811]\uFF0C\u6240\u4EE5\u5728\u540E\u5E8F\u904D\u5386\u65F6\u7528\u4E00\u4E2A\u4E34\u65F6\u53D8\u91CF\u8BB0\u5F55\u7D2F\u52A0\u548C</p><p><img src="https://user-images.githubusercontent.com/12841424/144879267-72a6eecd-1118-4122-9580-6e6a7bf099f5.jpg" alt="1638806370(1)"></p><p>1\u3001BST\u540E\u5E8F\u904D\u5386</p><p>2\u3001\u4E34\u65F6\u53D8\u91CF\u8BB0\u5F55\u7D2F\u52A0\u548C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TreeNode</span> <span class="token function">convertBST</span><span class="token punctuation">(</span><span class="token class-name">TreeNode</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>root <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">convertBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span><span class="token punctuation">;</span>

        sum <span class="token operator">+=</span> root<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
        root<span class="token punctuation">.</span>val <span class="token operator">=</span> sum<span class="token punctuation">;</span>
        
        <span class="token function">convertBST</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> root<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,8);function e(t,o){return p}var l=s(a,[["render",e]]);export{l as default};
