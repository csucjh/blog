import{c as n}from"./app.4bcc0b6d.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h2 id="_415-\u5B57\u7B26\u4E32\u76F8\u52A0" tabindex="-1"><a class="header-anchor" href="#_415-\u5B57\u7B26\u4E32\u76F8\u52A0" aria-hidden="true">#</a> 415.\u5B57\u7B26\u4E32\u76F8\u52A0</h2><h3 id="\u6A21\u62DF-\u4E00" tabindex="-1"><a class="header-anchor" href="#\u6A21\u62DF-\u4E00" aria-hidden="true">#</a> \u6A21\u62DF(\u4E00)</h3><p>\u8BB0\u5B57\u7B26\u4E32a\uFF0Cb\u5F53\u524D\u4F4D\u7F6E\u5BF9\u9F50\u7684\u4E24\u4E2A\u4F4D\u4E3A a<sub>i</sub> , b<sub>i</sub>\uFF0C\u53D6\u5B57\u7B26\u4E32\u4E2D\u957F\u5EA6\u5927\u7684\u4E3A\u904D\u5386\u957F\u5EA6<em>n</em>=max{\u2223<em>a</em>\u2223,\u2223<em>b</em>\u2223}\uFF0C\u53EF\u4EE5\u6709\u4E00\u4E0B\u516C\u5F0F</p><ul><li>\u6BCF\u4E00\u4F4D\u7684\u7B54\u6848\u4E3A (carry + a<sub>i</sub> + b<sub>i</sub> ) % 2</li><li>\u4E0B\u4E00\u4F4D\u7684\u8FDB\u4F4D\u4E3A (carry + a<sub>i</sub> + b<sub>i</sub> ) / 2</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">addStrings</span><span class="token punctuation">(</span><span class="token class-name">String</span> num1<span class="token punctuation">,</span> <span class="token class-name">String</span> num2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> n1 <span class="token operator">=</span> num1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> n2 <span class="token operator">=</span> num2<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>n1<span class="token punctuation">,</span> n2<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// \u8FDB\u4F4D\u503C</span>
        <span class="token keyword">int</span> carry <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            carry <span class="token operator">+=</span> i <span class="token operator">&lt;</span> n1 <span class="token operator">?</span> num1<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n1 <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
            carry <span class="token operator">+=</span> i <span class="token operator">&lt;</span> n2 <span class="token operator">?</span> num2<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>n2 <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token char">&#39;0&#39;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>

            <span class="token comment">// \u5F53\u524D\u4F4D\u7684\u503C</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>carry <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment">// \u8FDB\u4F4D\u503C</span>
            carry <span class="token operator">/=</span> <span class="token number">10</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>carry <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token comment">// \u6709\u6EA2\u51FA\u8FDB\u4F4D</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>carry<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        sb<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,5);function t(e,o){return p}var u=s(a,[["render",t]]);export{u as default};
