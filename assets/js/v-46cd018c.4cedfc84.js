"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7712],{4033:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-46cd018c",path:"/c-array/495.%E6%8F%90%E8%8E%AB%E6%94%BB%E5%87%BB.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"495.提莫攻击",slug:"_495-提莫攻击",children:[{level:3,title:"区间累计",slug:"区间累计",children:[]},{level:3,title:"减去重叠",slug:"减去重叠",children:[]}]}],filePathRelative:"c-array/495.提莫攻击.md",git:{updatedTime:1639398825e3,contributors:[{name:"csucjh",email:"csucjh@163.com",commits:1}]}}},1970:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(6252).uE)('<h2 id="_495-提莫攻击" tabindex="-1"><a class="header-anchor" href="#_495-提莫攻击" aria-hidden="true">#</a> 495.提莫攻击</h2><h3 id="区间累计" tabindex="-1"><a class="header-anchor" href="#区间累计" aria-hidden="true">#</a> 区间累计</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findPoisonedDuration</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> timeSeries<span class="token punctuation">,</span> <span class="token keyword">int</span> duration<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 区间[start, end]范围内持续中毒，total表示中毒总时长</span>\n        <span class="token comment">// 初始值不能start等于end，否则相当于多计算了一秒</span>\n        <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> end <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> timeSeries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">int</span> sec <span class="token operator">=</span> timeSeries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token comment">// 当不连续时，累加total并重新计算start</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>sec <span class="token operator">&gt;</span> end<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                total <span class="token operator">+=</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n                start <span class="token operator">=</span> sec<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            \n            end <span class="token operator">=</span> sec <span class="token operator">+</span> duration <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        total <span class="token operator">+=</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n        <span class="token keyword">return</span> total<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="减去重叠" tabindex="-1"><a class="header-anchor" href="#减去重叠" aria-hidden="true">#</a> 减去重叠</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">findPoisonedDuration</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> timeSeries<span class="token punctuation">,</span> <span class="token keyword">int</span> duration<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// end表示中毒失效的点(时间在end时已失效)</span>\n        <span class="token keyword">int</span> end <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> total <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> timeSeries<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            <span class="token keyword">int</span> sec <span class="token operator">=</span> timeSeries<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>\n            <span class="token keyword">if</span><span class="token punctuation">(</span>sec <span class="token operator">&gt;</span> end<span class="token punctuation">)</span><span class="token punctuation">{</span>\n                <span class="token comment">// 攻击没有重叠，就直接加</span>\n                total <span class="token operator">+=</span> duration<span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>\n                <span class="token comment">// 攻击重叠，duration减去重叠区域，就是延长的时间</span>\n                total <span class="token operator">+=</span> duration <span class="token operator">-</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> sec<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            \n            end <span class="token operator">=</span> sec <span class="token operator">+</span> duration<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n\n        <span class="token keyword">return</span> total<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>',5),t={},e=(0,a(3744).Z)(t,[["render",function(n,s){return p}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);